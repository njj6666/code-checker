'USEUNIT DSM_E2EUtility
'USEUNIT DSM_PDTUtility
'USEUNIT EnoviaUtils
'USEUNIT ExcelLib
'USEUNIT GlobalVars
'USEUNIT LogLib
'USEUNIT OR_Enovia
'USEUNIT WebKeywords
'USEUNIT WebObjectLib

Sub EnoviaDSM_S05004_S_Login(sUser)
  On Error Resume Next
  Dim objCurObj
  Dim bPassed
  Dim strStepComm
  'login 
  Call Enovia_Login(sUser)  
  Call Enovia_clickOK()
  
  'checkpoint
  Set objCurObj = objGetObject(OR_EnoviaHomePage_3D,"",30000)
  If objCurObj.Exists Then
    bPassed = True
    strStepComm = "Successed: " & "Login with " & sUser
    Log.Event strStepComm
  Else 
    bPassed = False
    strStepComm = "Failed: " & "Login" 
    Log.Event strStepComm
  End If
  
  Call LogStepData("Lgin", bPassed, strStepComm, sInfo)
  
  'Clean up
  Enovia_ClearVariable objCurObj
  Enovia_ClearVariable strStepComm
  Enovia_ClearVariable bPassed 
End Sub



'Create a new MIP on home page of Enovia, Click "+" Sign and create a new part
Sub EnoviaDSM_S05004_S_CreateMIP()
  On Error Resume Next
  Dim objCurObj
  Dim bPassed
  Dim strPDTNumber
  Dim strStepComm
  
  'Create MIP as predefined value 
  Call EnoviaDSM_CreatePDTfromHomePage("S5004_MIP")
  Delay(5000)
  
  '****Check result and Insert value into excel  
  aqPerformance.Start( "MIP Product Data Home Page Loaded" )
  Set objCurObj = objGetObject(OR_EnoviaHomePage_HeaderName,"","")
  Call LogPerformance("MIP Product Data Home Page Loaded", False, "") 
  
  If objCurObj.Exists Then 
    bPassed = True
    'get the new MIP Number
    strPDTNumber = EnoviaPDT_GetGcasCode()  'strPDTNumber = aqObject.GetPropertyValue(objCurObj,"textContent")
    'Log the result 
    strStepComm = "Successed: " & "Create MIP product data" & ": " & strPDTNumber
    Log.Event strStepComm
    'Record PDT Number in the excel as the result
    Call Excel_InsertValue(g_strOutputDataFilePath,"001-012","S5004_MIP-S5-001",strPDTNumber)
  Else
    bPassed = False
    strStepComm = "Failed: " & "Create MIP product data"
    Log.Event strStepComm
  End If
  
  Call LogStepData("Create MIP product data", bPassed, strStepComm, sInfo)
  
  'Clean up
  Enovia_ClearVariable objCurObj
  Enovia_ClearVariable strPDTNumber
  Enovia_ClearVariable strStepComm
  Enovia_ClearVariable bPassed  
End Sub 



'Edit MIP Attributes
Sub EnoviaDSM_S05004_S_EditMIPAttribute()
  On Error Resume Next
  Dim arrFiled
  Dim arrCheckPoint
  Dim objCurObj
  Dim strStepComm
  Dim bFlag
  Dim bPassed
  
  '***Click Edit button to update multiple MIP Attributes
  Array_EnoviaPDTAtt_S5004_MIP = Array(OR_EnoviaPDTAtt_ReleaseRequired,OR_EnoviaPDTAtt_OuterWidth,OR_EnoviaPDTAtt_OuterDepth,OR_EnoviaPDTAtt_OuterHeight)
  Call EnoviaDSM_EditPDTMultiAttrs(Array_EnoviaPDTAtt_S5004_MIP,"EditPDTAttr","S5004_MIP",4,"")
  
  'Verify and Log the result,Using the attribute value as checkpoint
  aqPerformance.Start( "Save MIP Product Data Attributes" )
  arrField = Array("WEBOBJECT","contentText~ObjectType","Structured Release Criteria Required~Cell","TD")  'get attribute field
  Set objCurObj = objGetObject(arrField,"","")
  arrCheckPoint = Array("WEBOBJECT","ColumnIndex~RowIndex~ObjectType",objCurObj.ColumnIndex+1&"~"&objCurObj.RowIndex&"~Cell","TD") 'get attribute value
  Call LogPerformance("Save MIP Product Data Attributes", False, "")
  
  '*****check whether Structured Release Criteria Required=No?
  bFlag = VerifyText(arrCheckPoint, "", "", "contentText", "No")  
  If bFlag Then 
    bPassed = True
    strStepComm = "Successed: " & "Edit MIP Attribute"
    Log.Event strStepComm
  Else
    bPassed = False
    strStepComm = "Failed: " & "Edit MIP Attribute"
    Log.Event strStepComm
  End If
  
  Call LogStepData("Edit MIP Attribute", bPassed, strStepComm, sInfo) 
  
  'Clean up
  Enovia_ClearVariable arrFiled
  Enovia_ClearVariable arrCheckPoint
  Enovia_ClearVariable objCurObj
  Enovia_ClearVariable bFlag
  Enovia_ClearVariable strStepComm
  Enovia_ClearVariable bPassed  
End Sub 


'Add MIP to Part Family
Sub EnoviaDSM_S05004_S_AddMIPToPartFamily()
  On Error Resume Next
  Dim strPartfamily
  Dim arrGetObj
  Dim objCurObj
  Dim strStepComm
  Dim bFlag
  Dim bPassed
  
  '****click Classification PowerView label,add MIP to part family
  Call Click(OR_EnoviaPDTLP_Sixth,"","")
  strPartfamily = Excel_SearchValue(g_strInputDataFilePath,"S0_Data","DXC-E2E-S0-Device MIP and IP")
  Call EnoviaDSM_AddToPartFamily("",strPartfamily) 
  Delay(5000)
  
  '****check and log step result,
  arrGetObj = Array("WEBOBJECT","contentText~ObjectType",strPartfamily&"~Link","A")
  Set objCurObj = objGetObject(arrGetObj,"","")
  
  If objCurObj.Exists Then 
    bPassed = True
    'Log the result 
    strStepComm = "Successed: " & "Add MIP to PartFamily" & " : " & strPartfamily
    Log.Event strStepComm
  Else
    bPassed = False
    strStepComm = "Failed: " & "Add MIP to PartFamily"
    Log.Event strStepComm
  End If
  
  Call LogStepData("Add MIP to PartFamily", bPassed, strStepComm, sInfo)
  
  'clean up
  Enovia_ClearVariable strPartfamily
  Enovia_ClearVariable arrGetObj
  Enovia_ClearVariable objCurObj
  Enovia_ClearVariable strStepComm
  Enovia_ClearVariable bPassed 
End Sub 


'Assign as Master for MIP
Sub EnoviaDSM_S05004_S_AssignMIPAsMaster()
  On Error Resume Next
  Dim objCurObj
  Dim bPassed
  Dim strStepComm
  
  '****click Data 001 in left pannel,and click button:Assign as master
  Call Click(OR_EnoviaHPLP_First,"","")
  Call Click(OR_EnoviaPDTAtt_AssignAsMaster,"",30000)
  Call Click(OR_EnoviaHomepage_Refresh,"","")
  Deleay(5000)
  
  '*****check ad log step result
  Set objCurObj = objGetObject(OR_EnoviaPDTAtt_ManualSync,"","")
  If objCurObj.Exists Then
    bPassed = True
    strStepComm = "Successed: " & "Assign MIP as master" 
    log.Event strStepComm
  Else
    bPassed = False
    strStepComm = "Failed: " & "Assign MIP as master" 
    log.Event strStepComm
  End If
  
  Call LogStepData("Assign MIP as master", bPassed, strStepComm, sInfo)
  
  Enovia_ClearVariable objCurObj
  Enovia_ClearVariable strStepComm
  Enovia_ClearVariable bPassed 
End Sub 


'Create a new MCOP on home page of Enovia, Click "+" Sign and create a new part
Sub EnoviaDSM_S05004_S_CreateMCOP()
  On Error Resume Next
  Dim objCurObj
  Dim strPDTNumber
  Dim strStepComm
  
  'Create MCOP as predefined value 
  Call EnoviaDSM_CreatePDTfromHomePage("S5004_MCOP")
  Delay(5000)
  
  '****Check result and Insert value into excel  
  aqPerformance.Start( "MCOP Product Data Home Page Loaded" )
  Set objCurObj = objGetObject(OR_EnoviaHomePage_HeaderName,"","")
  Call LogPerformance("MCOP Product Data Home Page Loaded", False, "") 
  
  If objCurObj.Exists Then 
    bPassed = True
    strPDTNumber = EnoviaPDT_GetGcasCode()  'strPDTNumber = aqObject.GetPropertyValue(objCurObj,"textContent") 'get the new MCOP Number
    'Log the result 
    strStepComm = "Successed: " & "Create MCOP product data" & ": " & strPDTNumber
    Log.Event strStepComm
    'Record PDT Number in the excel as the result
    Call Excel_InsertValue(g_strOutputDataFilePath,"001-012","S5004_MCOP-S5-001",strPDTNumber)
  Else
    bPassed = False
    strStepComm = "Failed: " & "Create MCOP product data"
    Log.Event strStepComm
  End If
  
  Call LogStepData("Create MCOP product data", bPassed, strStepComm, sInfo)
  
  'Clean up
  Enovia_ClearVariable objCurObj
  Enovia_ClearVariable strPDTNumber
  Enovia_ClearVariable strStepComm
  Enovia_ClearVariable bPassed  
End Sub 


'Edit MCOP Attributes
Sub EnoviaDSM_S05004_S_EditMCOPAttribute()
  On Error Resume Next
  Dim arrFiled
  Dim arrCheckPoint
  Dim objCurObj
  Dim strStepComm
  Dim bFlag
  Dim bPassed
  
  '***Click Edit button to update multiple MCOP Attributes
  Array_EnoviaPDTAtt_S5004_MCOP = Array(OR_EnoviaPDTAtt_ReleaseRequired,OR_EnoviaPDTAtt_OuterWidth,OR_EnoviaPDTAtt_OuterDepth,OR_EnoviaPDTAtt_OuterHeight)
  Call EnoviaDSM_EditPDTMultiAttrs(Array_EnoviaPDTAtt_S5004_MCOP,"EditPDTAttr","S5004_MCOP",4,"")
  
  'Verify and Log the result,Using the attribute value as checkpoint
  aqPerformance.Start( "Save MCOP Product Data Attributes" )
  arrField = Array("WEBOBJECT","contentText~ObjectType","Structured Release Criteria Required~Cell","TD")  'get attribute field
  Set objCurObj = objGetObject(arrField,"","")
  arrCheckPoint = Array("WEBOBJECT","ColumnIndex~RowIndex~ObjectType",objCurObj.ColumnIndex+1&"~"&objCurObj.RowIndex&"~Cell","TD") 'get attribute value
  Call LogPerformance("Save MCOP Product Data Attributes", False, "")
  '*****check whether Structured Release Criteria Required=No?
  bFlag = VerifyText(arrCheckPoint, "", "", "contentText", "No")
  If bFlag Then 
    bPassed = True
    strStepComm = "Successed: " & "Edit MCOP Attribute" 
    Log.Event strStepComm
  Else
    bPassed = False
    strStepComm = "Failed: " & "Edit MCOP Attribute" 
    Log.Event strStepComm
  End If
  
  Call LogStepData("Edit MCOP Attribute", bPassed, strStepComm, sInfo) 
  
  'Clean up
  Enovia_ClearVariable arrFiled
  Enovia_ClearVariable arrCheckPoint
  Enovia_ClearVariable objCurObj
  Enovia_ClearVariable bFlag
  Enovia_ClearVariable strStepComm
  Enovia_ClearVariable bPassed  
End Sub 



'Add MCOP to Part Family
Sub EnoviaDSM_S05004_S_AddMCOPToPartFamily()
  On Error Resume Next
  Dim strPartfamily
  Dim arrGetObj
  Dim objCurObj
  Dim strStepComm
  Dim bFlag
  Dim bPassed
  
  '****click Classification PowerView label,add MIP to part family
  Call Click(OR_EnoviaPDTLP_Sixth,"","") 
  strPartfamily = Excel_SearchValue(g_strInputDataFilePath,"S0_Data","DXC-E2E-S0-Device MCOP and COP")
  Call EnoviaDSM_AddToPartFamily("",strPartfamily) 
  Delay(5000)
  
  '****check and log step result,
  arrGetObj = Array("WEBOBJECT","contentText~ObjectType",strPartfamily&"~Link","A")
  Set objCurObj = objGetObject(arrGetObj,"","") 
  
  If objCurObj.Exists Then 
    bPassed = True
    'Log the result 
    strStepComm = "Successed: " & "Add MCOP to PartFamily" & ": " & strPartfamily
    Log.Event strStepComm
  Else
    bPassed = False
    strStepComm = "Failed: " & "Add MCOP to PartFamily"
    Log.Event strStepComm
  End If
  
  Call LogStepData("Add MCOP to PartFamily", bPassed, strStepComm, sInfo)
  
  'clean up
  Enovia_ClearVariable strPartfamily
  Enovia_ClearVariable arrGetObj
  Enovia_ClearVariable objCurObj
  Enovia_ClearVariable strStepComm
  Enovia_ClearVariable bPassed 
End Sub 



'Assign as Master for MCOP
Sub EnoviaDSM_S05004_S_AssignMCOPAsMaster()
  On Error Resume Next
  Dim arrGetObj
  Dim objCurObj
  Dim bPassed
  Dim strStepComm
  
  '****click Data 001 in left pannel,and click button:Assign as master
  Call Click(OR_EnoviaHPLP_First,"","")
  Call Click(OR_EnoviaPDTAtt_AssignAsMaster,"",30000)
  Call Click(OR_EnoviaHomepage_Refresh,"","")
  Delay(5000)
  
  '*****check ad log step result
  Set objCurObj = objGetObject(OR_EnoviaPDTAtt_ManualSync,"","")
  If objCurObj.Exists Then
    bPassed = True
    strStepComm = "Successed: " & "Assign MCOP as master" 
    log.Event strStepComm
  Else
    bPassed = False
    strStepComm = "Failed: " & "Assign MCOP as master" 
    log.Event strStepComm
  End If
  
  Call LogStepData("Assign MCOP as master", bPassed, strStepComm, sInfo)
  
  Enovia_ClearVariable arrGetObj
  Enovia_ClearVariable objCurObj
  Enovia_ClearVariable strStepComm
  Enovia_ClearVariable bPassed 
End Sub 