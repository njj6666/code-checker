'USEUNIT GlobalVars
'USEUNIT OR_Enovia
'USEUNIT WebObjectLib
'USEUNIT WindowsUtility

'##################################################################################################################
'Function Name                : EnoviaSearch_SelectList
'Description                  : Selects multiple values in a list
'Arguments                    : List Object, Value that has to be selected
'Return Value                 : Nothing
'Author                       : Geetanjali Vajrapu
'Creation Date                : 5 & 6-Jun-2017
'Special Conditions           : NA                                     
'Revision History             : NA
'Revision Date                : NA
'##################################################################################################################

Function EnoviaSearch_SelectList(objList,selectValue)

    Dim arrItemsList(),iCounter 
    
    Sys.Refresh
    iCount = objList.wItemCount
    iCounter = 0
    If IsArray(selectValue) = True Then
      For j= 0 to ubound(selectValue)
        For i= 0 to iCount-1
         If instr(objList.wItem(i),selectValue(j))=1  then
             Redim preserve arrItemsList(iCounter)
             arrItemsList(iCounter) = objList.wItem(i)
             iCounter = iCounter+1
         End If
        Next  
        objList.Multiselect(arrItemsList)  
      Next
    Else
      For i= 0 to iCount-1
         If instr(Trim(objList.wItem(i)),selectValue)=1  then
             objList.Multiselect(objList.wItem(i))
         End If
      Next
    End If
    
    Set objList = nothing
    Erase arrItemsList
    
End Function


'##################################################################################################################
'Function Name                : EnoviaSearch_SetDate
'Description                  : Sets the date
'Arguments                    : Object for which date has to be set, Date Criteria and Dates
'Return Value                 : Nothing
'Author                       : Geetanjali Vajrapu
'Creation Date                : 1 & 2-Jun-2017
'Special Conditions           : NA                                     
'Revision History             : NA
'Revision Date                : NA
'##################################################################################################################

Function EnoviaSearch_SetDate(oDateField,oModel)
  
  Select Case oDateField(2)
  case "ORIGINATED~Textbox~True" 
    sWhen = oModel.OriginatedDate.When
    dDate1 = oModel.OriginatedDate.DateOne
    dDate2 = oModel.OriginatedDate.DateTwo
    Set DateTimePicker = WebObjectLib.objGetObject(oDateField,"","")
  case "MODIFIED~Textbox~True"
    sWhen = oModel.ModifiedDate.When
    dDate1 = oModel.ModifiedDate.DateOne
    dDate2 = oModel.ModifiedDate.DateTwo
    Set DateTimePicker = WebObjectLib.objGetObject(oDateField,"","")
  case "RELEASE_DATE~Textbox"
     sWhen = oModel.ReleaseDate.When
    dDate1 = oModel.ReleaseDate.DateOne
    dDate2 = oModel.ReleaseDate.DateTwo
    Set DateTimePicker = WebObjectLib.objGetObject(oDateField,g_SearchPageURL,"")
  case "EFFECTIVE_DATE~Textbox"
     sWhen = oModel.EffectiveDate.When
    dDate1 = oModel.EffectiveDate.DateOne
    dDate2 = oModel.EffectiveDate.DateTwo
    Set DateTimePicker = WebObjectLib.objGetObject(oDateField,g_SearchPageURL,"")
  case "EXPIRATION_DATE_PRODUCTDATA~Textbox"
     sWhen = oModel.ExpirationDate.When
    dDate1 = oModel.ExpirationDate.DateOne
    dDate2 = oModel.ExpirationDate.DateTwo
    Set DateTimePicker = WebObjectLib.objGetObject(oDateField,g_SearchPageURL,"")
  case "OBSOLETE_DATE~Textbox"
     sWhen = oModel.ObsoleteDate.When
    dDate1 = oModel.ObsoleteDate.DateOne
    dDate2 = oModel.ObsoleteDate.DateTwo
    Set DateTimePicker = WebObjectLib.objGetObject(oDateField,g_SearchPageURL,"")
  End Select
  
  Select Case sWhen
    case "On"
      dDate1 = aqConvert.DateTimeToFormatStr(dDate1, "%b %d, %Y")
      'Set the date
      DateTimePicker.innerText = dDate1
    case "On or after"
      dDate1 = aqConvert.DateTimeToFormatStr(dDate1, "%b %d, %Y")
      'Set the date
      DateTimePicker.innerText = "> "&dDate1
    case "On or before"
      dDate1 = aqConvert.DateTimeToFormatStr(dDate1, "%b %d, %Y")
      'Set the date
      DateTimePicker.innerText = "< "&dDate1
    case "Between"
      dDate1 = aqConvert.DateTimeToFormatStr(dDate1, "%b %d, %Y")
      dDate2 = aqConvert.DateTimeToFormatStr(dDate2, "%b %d, %Y")
      'Set the date
      DateTimePicker.innerText = "> "&dDate1&", < "&dDate2
    case Else
      Call Err.Raise(61000, "EnoviaSearch_SetDate", "Date criteria not appropriate.") 
  End Select
  
  Set DateTimePicker = nothing
  
End Function 

'##################################################################################################################
'Function Name                : EnoviaSearch_DynText
'Description                  : Writes Text into Dynamic Area
'Arguments                    : Dynamic Text Area Object, Text that has to be written
'Return Value                 : Nothing
'Author                       : Geetanjali Vajrapu
'Creation Date                : 5 & 6-Jun-2017
'Special Conditions           : NA                                     
'Revision History             : NA
'Revision Date                : NA
'##################################################################################################################

Function EnoviaSearch_DynText(objDynText,sText)
    
    Set objDynText = objGetObject(OR_EnoviaSearch_DynText,g_SearchPageURL,2500)
    If Not (objDynText is Nothing) Then
    objDynText.Keys "^a"
      If IsArray(sText) Then
        For i = 0 to Ubound(sText)
          objDynText.Keys(sText(i)&"|")
        Next
      Else
      objDynText.Keys(sText)
    End If
    Set objDynText = Nothing
    End If
  
End Function

'##################################################################################################################
'Function Name                : EEnoviaSearch_ValCheck
'Description                  : Checks if the value passed is an array or null
'Arguments                    : Variable that has to be verified
'Return Value                 : True / False
'Author                       : Geetanjali Vajrapu
'Creation Date                : 7-Jun-2017
'Special Conditions           : NA                                     
'Revision History             : NA
'Revision Date                : NA
'##################################################################################################################

Function EnoviaSearch_ValCheck(sValue)

  blnCheck= False
  
  IF IsArray (sValue) = True Then
     blnCheck = True
  Else
     IF sValue <> "" Then
      blnCheck = True
     End IF 
  End IF
  
  EnoviaSearch_ValCheck = blnCheck
    
End Function 

'##################################################################################################################
'Function Name                : EnoviaSearch_CloseSearchWindows
'Description                  : Closes all the search windows wxcept the main window
'Arguments                    : NA
'Return Value                 : NA
'Author                       : Geetanjali Vajrapu
'Creation Date                : 12-Jun-2017
'Special Conditions           : NA                                     
'Revision History             : NA
'Revision Date                : NA
'##################################################################################################################

Function EnoviaSearch_CloseSearchWindows()

  On Error Resume Next   
  
    Dim objPage
    Dim arrPropNames, arrPropValues, arrChildBrowser 

    lstrPageURL = Sys.Process(g_strBrowserType).Page("*").URL
    arrPropNames = Array("ObjectType", "URL")
    arrPropValues = Array("Page", lstrPageURL, "*")    
        
    Set objPage = Sys.Process(g_strBrowserType).FindChild(arrstrPropNames, arrstrPropValues, 20, True)
    
    arrChildBrowser = Sys.Process(g_strBrowserType).FindAllchildren("ObjectType","BrowserWindow")
    
    If Ubound(arrChildBrowser) > 0 Then
      For each obj in arrChildBrowser
        If obj.ObjectIdentifier <> 0 Then
          obj.Close
        End If
      Next
    End If
    
    Set objClose = objGetObject(OR_EnoviaSearch_CloseButton,"",1000)
    If Not (objClose is Nothing) Then
      objClose.Click()
    End If
    
    Set objCloseLink = objGetObject(OR_EnoviaSearch_CloseLink,"",1000)
    If Not (objCloseLink is Nothing) Then
      objCloseLink.Click()
    End If

    Set objPage = nothing   
    Set objClose = nothing
    
End Function

'This will re-create the search string from an array of search parameters
Function CombineSearchStrings(aStrings)
  sReturn = ""
  If IsArray(aStrings) Then
    sReturn = Join(aStrings,"|")
  Else
    sReturn = aStrings
  End If
  CombineSearchStrings = sReturn
End Function 


'Function to Reset the name search screen.
Function ResetNameSearch()
  
  Set objReset = objGetObject(OR_EnoviaSearch_SSearchResetCmd,"",1000)
  If Not (objReset is Nothing) Then
    objReset.click()
  End If  
  
  Call EnoviaSearch_AlertWindow("")
  
  Set objClose = objGetObject(OR_EnoviaSearch_CloseButton,"",1000)
  If Not (objClose is Nothing) Then
    objClose.Click()
  End If
    
  Set objCloseLink = objGetObject(OR_EnoviaSearch_CloseLink,"",1000)
  If Not (objCloseLink is Nothing) Then
    objCloseLink.Click()
  End If
  
  Sys.Refresh
  aqUtils.Delay 2000,"Page Refreshing."
  
End Function 

Function PeriheralReset()
  Call EnoviaSearch_CloseSearchWindows()
  Call ResetNameSearch()  
End Function 


'##################################################################################################################
'Function Name                : EnoviaSearch_RealTimeSearch
'Description                  : Selects RealTime Search button
'Arguments                    : NA
'Return Value                 : Nothing
'Author                       : Sumana Gottipati
'Creation Date                : 21 - Jun -2017
'Special Conditions           : NA                                     
'Revision History             : NA
'Revision Date                : Na
'##################################################################################################################
Function EnoviaSearch_RealTimeSearch()
  
  Dim bFlag
  bFlag = False 
  'Create object of Switch Query Button 
  Sys.Refresh
  Set objRealTimeSearch = objGetObject(OR_EnoviaSearch_SwitchQueryButton,"",3000)
  If Not(objRealTimeSearch is NOTHING) Then
  If (objRealTimeSearch.ObjectLabel = "Go to RealTime") Then
    If Not(objRealTimeSearch is NOTHING) Then    
      objRealTimeSearch.Click() 
      Set objRealTimeSearch = Nothing
      bFlag = True 
    Else
      Call Err.raise(63001,"EnoviaSearch_SelectRealTimeSearch","Real Time Search Not changed to Indexed Search")
    End If
    'Handle the alert window if it pops up
    If g_isBlocked = false Then
      Call EnoviaSearch_AlertWindow("")
    End If
  End If
  End If
End function


'##################################################################################################################
'Function Name                : EnoviaSearch_CreateProdData
'Description                  : Creates the Prod Data
'Arguments                    : NA
'Return Value                 : Nothing
'Author                       : Vamsi
'Creation Date                : 29 - Jun -2017
'Special Conditions           : NA                                     
'Revision History             : NA
'Revision Date                : Na
'##################################################################################################################
Function EnoviaSearch_CreateProdData(sProdData)
  
    'Search for the + sign control
    Set objIconAddData = objGetObject(OR_EnoviaSearch_Add_Data,"","")
    Call objIconAddData.Click
    Set objIconAddData = Nothing
    
    'Check for Create Product Data label
    Set objCreateProdData = objGetObject(OR_EnoviaSearch_Add_Data_Create_Prod_Data,"","")
    
    If objCreateProdData.VisibleOnScreen Then
      Call objCreateProdData.Click
    Else
      Set objProdPanel = objGetObject(OR_EnoviaSearch_ProdPanel,"","")
      Set objProdSpec = objProdPanel.FindChild("innerText","Product Specifications",5,True)
      objProdSpec.Click
      Call objCreateProdData.Click
      Set objProdSpec = Nothing
    End If
    Set objCreateProdData = Nothing
    
    'Maximise all windows
    Call MaximizeAllWindows()
    
    'Check For Title ID in Create Data Page
    Set objCreateDataTitle = objGetObject(OR_EnoviaSearch_Create_Data_Title,g_CreateProdDataPage_URL,"")
    
    If objCreateDataTitle.VisibleOnScreen = False Then
      Call Err.raise (64971,"EnoviaSearch_CreateProdData", "Create Prod Data page NOT opened")
    End If
    'Populate Title Text
    Call objCreateDataTitle.Keys(sProdData)
    Set objCreateDataTitle = Nothing
    
    'Populate Desc
    Set objCreateDataDesc = objGetObject(OR_EnoviaSearch_Create_Data_Desc,g_CreateProdDataPage_URL,"")
    Call objCreateDataDesc.Keys(sProdData)
    Set objCreateDataDesc = Nothing
    
    'Populate Primary Org
    Set objCreateDataPrimeOrg = objGetObject(OR_EnoviaSearch_Create_Data_Prime_Org,g_CreateProdDataPage_URL,"")
    objCreateDataPrimeOrg.Keys "Nor"
    aqutils.Delay 20000,"Waiting to display the list."
    objCreateDataPrimeOrg.Keys "[Down]"
    objCreateDataPrimeOrg.Keys "[Down]"
    objCreateDataPrimeOrg.Keys "[Enter]"
    Set objCreateDataPrimeOrg = Nothing
    
    'Select the Segment
    Set objCreateDataSegment = objGetObject(OR_EnoviaSearch_Create_Data_Segment,g_CreateProdDataPage_URL,"")
    Call objCreateDataSegment.ClickItem("Baby Wipes")
    Set objCreateDataSegment = Nothing
    
    'Select the Security Cat Class
    Set objCreateDataSecCatClass = objGetObject(OR_EnoviaSearch_Create_Data_SecCatClass,g_CreateProdDataPage_URL,"")
    Call objCreateDataSecCatClass.Click
    objCreateDataSecCatClass.Keys "Diapers-R"
    Set objCreateDataSecCatClass = Nothing
    
    
    aqutils.Delay 10000,"Waiting to load Data in Drop Down."
    'Select the Item in the list
    arrprop = Array("innerText","ObjectType")
    arrVals = Array("Diapers-R","TextNode")
    
    Set objList = objGetPage(g_CreateProdDataPage_URL).FindChild(arrprop,arrVals,12)
    Call objList.Click
    Set objList = Nothing
    
    Set objCreateDataSecCatClass_Done = objGetObject(OR_EnoviaSearch_Create_Data_Done_TextNode,g_CreateProdDataPage_URL,"")
    Call objCreateDataSecCatClass_Done.Click
    Set objCreateDataSecCatClass_Done = Nothing
    
    'Click On Done Button
    Set objCreateDataDone_Button = objGetObject(OR_EnoviaSearch_Create_Data_Done_Button,g_CreateProdDataPage_URL,"")
    Call objCreateDataDone_Button.Click
    Set objCreateDataDone_Button = Nothing
    
    Call EnoviaSearch_AlertWindow("") 
    
    Set objCreateDataDone_Button = objGetObject(OR_EnoviaSearch_Create_Data_Done_Button,g_CreateProdDataPage_URL,3000)
    If Not(objCreateDataDone_Button is NOTHING) Then
    Call objCreateDataDone_Button.Click
    Set objCreateDataDone_Button = Nothing
    End If
    
    'Get the Panel of the Extended header
    Set objExtendedheaderPnl = objGetObject(OR_EnoviaSearch_ExtendedHeader,"",3000)
    
    arrprop = Array("innerText","ObjectType")
    arrVals = Array("FPP-*","TextNode")
    
    Set objList = objExtendedheaderPnl.FindChild(arrprop,arrVals,12)
    gProdDataTitle1 = objList.innerText
    
    EnoviaSearch_CreateProdData = gProdDataTitle1
    
    Set objExtendedheaderPnl = Nothing
    Log.Message gProdDataTitle1
    
    
    '******************  Will remove the below code after calling this current function where test data should be created
''  sDateTime = aqDateTime.Now
''  sProdData = aqDateTime.GetYear(sDateTime) & aqDateTime.GetMonth(sDateTime) & aqDateTime.GetDay(sDateTime) & aqDateTime.GetHours(sDateTime) & aqDateTime.GetMinutes(sDateTime) & aqDateTime.GetSeconds(sDateTime)
''  call EnoviaSearch_CreateProdData(sProdData)
    '******************************************************************************
End Function 

 
  
 