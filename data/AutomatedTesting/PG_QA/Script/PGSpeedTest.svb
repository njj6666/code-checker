'USEUNIT DBLib 
'USEUNIT GlobalVars
'USEUNIT WebKeywords
'USEUNIT WebObjectLib
'USEUNIT RecordSetLib
'USEUNIT LogLib
'USEUNIT OR_Enovia
'USEUNIT GlobalVars
'USEUNIT TimeLib
'USEUNIT EnoviaUtils
'USEUNIT WindowsUtility
'USEUNIT FileLib
'USEUNIT OR_PGSpeedtest

'g_strBrowserType="firefox" 
Public latency, jitter, download, upload

' A script to automate running a Speedtest and write the network impairment values to a text file
Function PGSpeedtest_NA()
  Call CloseAllBrowserProcesses()
  Call Browsers.Item(btFirefox, "", Browsers.pX86).Run("http://gadc-wpad001.na.pg.com/speedtest/")
  Call selectNADataCenter()
  Call CreateandWriteToTextFile()
End Function

Function selectNADataCenter()
  Set objPGSpeedtestLocationBtn = objGetObject(OR_PGSpeedtestLocation_DropDown,"","")
  objPGSpeedtestLocationBtn.Click
  Set objChild = objGetObject(OR_PGSpeedtestLocation_NABtn,"","")
  Set objNA = objChild.Parent
  objNA.Click
  Set objPGSpeedtestGoBtn = objGetObject(OR_PGSpeedtestStart_GOBtn,"","")
  objPGSpeedtestGoBtn.Click
End Function 

Function getImpairmentValues()
On Error Resume Next

  If Log_UpdateIsBlocked() = False Then     
    Set objPGSpeedtestPing = objGetObject(OR_PGSpeedtestResults_Ping, "", "")
    latency = objPGSpeedtestPing.contentText
    Log.Message("latency = " + latency + " ms")
  End If 
  
  Delay(2000)
  
  If Log_UpdateIsBlocked() = False Then      
    Set objPGSpeedtestJitter = objGetObject(OR_PJSpeedtestResults_Jitter, "", "")
    jitter = objPGSpeedtestJitter.contentText
    Log.Message("jitter = " + jitter + " ms")
  End If
  
  Delay(20000)
  
  If Log_UpdateIsBlocked() = False Then      
    Set objPGSpeedtestDownload = objGetObject(OR_PGSpeedtestResults_DownloadField, "", "")
    download = objPGSpeedtestDownload.contentText
    Log.Message("download time = " + download + " mbps")
  End If

  Delay(20000)
  
  If Log_UpdateIsBlocked() = False Then 
    Set objPGSpeedtestUpload = objGetObject(OR_PGSpeedtestResults_UploadField, "", "")
    upload = objPGSpeedtestUpload.contentText
    Log.Message("upload time = " + upload + " mbps")
  End If
  
  f.Close
  Call CloseAllBrowserProcesses()
End Function

Function CreateandWriteToTextFile()
  Const ForReading = 1, ForWriting = 2, ForAppending = 8, TristateTrue = 0
  Dim fs, f
  sPath = "C:\Users\Administrator\Desktop\Speedtest\results.txt"
  ' Creates a new file object
  Set fs = CreateObject("Scripting.FileSystemObject")
  If Not fs.FileExists(sPath) Then
    Set objFile = fs.CreateTextFile(sPath)    
    objFile.Close
    Log.Message("Text file created")
  End If
  ' Appends data to the file
  Set f = fs.OpenTextFile(sPath, ForAppending, TristateTrue)
  dCurrentDataAndTime = aqDateTime.Now
  f.Write dCurrentDataAndTime & vbCrlf
  Call getImpairmentValues()
  f.Write latency & ", " & jitter & ", " & download & ", " & upload & vbCrlf
  Log.Message("Text file appended")
End Function 

Function hrping()
  dim p, w
  Call Sys.Keys("[Win]")
  Set p = Sys.Process("explorer").Window("DV2ControlHost", "Start menu", 1).Window("Desktop OpenBox Host", "", 1).Window("Search Box", "", 1).Window("SearchEditBoxWrapperClass", "", 1).Window("DirectUIHWND", "", 1)
  Call p.Keys("cmd^![Enter]")
  Set w = Sys.Process("cmd", 3).Window("ConsoleWindowClass", "Administrator: C:\Windows\system32\cmd.exe", 1)
  w.Keys("ipconfig")
End Function

' Works but does not have administrator privileges
Function RunCMDipconfig()
  'Call Start-Process <cmd_exe> -Verb runas
  Call Sys.OleObject("WScript.Shell").Run("C:\\Windows\\system32\\cmd.exe")
  Set p = Sys.Process("cmd",3)
  Set w = p.Window("ConsoleWindowClass","*")
  w.Keys("cd C:\Users\Administrator\Desktop [Enter]")
  w.Keys("ipconfig [Enter]")
End Function