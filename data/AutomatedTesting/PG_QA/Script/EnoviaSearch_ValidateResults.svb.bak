'USEUNIT DBLib 
'USEUNIT GlobalVars
'USEUNIT WebObjectLib
'USEUNIT RecordSetLib
'USEUNIT EnoviaSearch_PopulateSearchModel
'USEUNIT OR_Enovia 
'USEUNIT LogLib
'USEUNIT EnoviaSearch_Utility
Function Dummy()  
  Set temp = EnoviaSearch_CreateDictionaryModel()
  Set oModel = temp.Item("TC-01_Named Search_Object Name Search")
  Call EnoviaSearch_ValidateNameSearch(oModel, "jkj")
  'Call EnoviaSearch_ValidateFullTextSearch(oModel,"Full")
  'Call EnoviaSearch_ValidateFindProductSearch(oModel, "Refined") 
  
End Function 
'*****************************************************************************************************************
 ' Purpose:  To Validate Named search results displayed with/wihout results refinement.
 ' Inputs:   oModel: Dictionary object which holds all input details required to validate.
 '           SearchType: 'Refined' or anything else. validates results in Results1 and Results2 columns based on
 '           value passed.
 ' Returns:  N/A   
'*****************************************************************************************************************
Function EnoviaSearch_ValidateNameSearch(oModel,SearchType) 
  Set objEnoviaSearchName = objGetObject(OR_EnoviaSearch_Name,"","")
  Set objEnoviaSearchFields = objGetObject(OR_EnoviaSearch_Fields,"","")
   bisalreadyfound = False
  If objEnoviaSearchName.Exists Then  
      nRowCount =  objEnoviaSearchName.rowCount-1
      If IsArray(oModel.Common.ResultsMain) Then
        stempList = Join(oModel.Common.ResultsMain,",")
        else 
          stempList = oModel.Common.ResultsMain   
      End If
      If  aqString.Find(stempList,"No Objects") >= 0 and SearchType <> "Refined" Then
           if aqString.Find((objEnoviaSearchFields.Cell(1,0).ContentText),"No Objects") >= 0 Then
                Log.message "No Objects Found for Main search as expected"
                bisalreadyfound = True
           End If
      End If  
      If bisalreadyfound = False Then
          If nRowCount > 0 and Trim(objEnoviaSearchFields.Cell(1,0).ContentText) <> "No Objects Found" Then
              If EnoviaSearch_ValCheck(oModel.Common.ResultsMain) = True and SearchType <> "Refined" Then
                  Call EnoviaNameSearch_Validate_Results(oModel.Common.SearchValue,oModel.Common.ResultsMain,False,objEnoviaSearchName,1,oModel)
                ElseIf EnoviaSearch_ValCheck(oModel.Common.ResultsRefined) = True Then             
                  Call EnoviaNameSearch_Validate_Results(oModel.Common.SearchValue,oModel.Common.ResultsRefined,False,objEnoviaSearchName,1,oModel)        
                Else                  
                  nCol = EnoviaSearch_FindTableColumnNumber( "Named" , "Revision")
                  Call EnoviaSearch_ValidateSearchFields("Revision",oModel.Revision.Revision,"",objEnoviaSearchFields,nRowCount,nCol)
                  nCol = EnoviaSearch_FindTableColumnNumber( "Named" , "Type")
                  Call EnoviaSearch_ValidateSearchFields("Type",oModel.Common.sType,"",objEnoviaSearchFields,nRowCount,nCol)
                  nCol = EnoviaSearch_FindTableColumnNumber( "Named" , "State")
                  Call EnoviaSearch_ValidateSearchFields("State",oModel.Common.State,"",objEnoviaSearchFields,nRowCount,nCol)
                  nCol = EnoviaSearch_FindTableColumnNumber( "Named" , "ModifiedDate")
                  Call EnoviaSearch_ValidateSearchFields("ModifiedDate",oModel.ModifiedDate.DateOne,"",objEnoviaSearchFields,nRowCount,nCol)
                  nCol = EnoviaSearch_FindTableColumnNumber( "Named" , "OriginatedDate")
                  Call EnoviaSearch_ValidateSearchFields("OriginatedDate",oModel.OriginatedDate.DateOne,"",objEnoviaSearchFields,nRowCount,nCol)
                  nCol = EnoviaSearch_FindTableColumnNumber( "Named" , "Owner")
                  Call EnoviaSearch_ValidateSearchFields("Owner",oModel.OwnerUser.User,"",objEnoviaSearchFields,nRowCount,nCol)   
              End If
            Else
              Log.Warning "No records found for the Named Search:"&oModel.Common.SearchValue
              Call Err.Raise (64401,"EnoviaSearch_ValidateNamedSearch","No records found for the Named Search:"&oModel.Common.SearchValue)
          End If         
      End If
    Else    
      Log.Warning "No records found for the Named Search:"&oModel.Common.SearchValue
      Call Err.Raise (64401,"EnoviaSearch_ValidateNamedSearch","No records found for the Named Search:"&oModel.Common.SearchValue)    
  End If 
  Set nRowCount = Nothing  
End Function

'*****************************************************************************************************************
 ' Purpose:  To Validate FullText search results displayed with/wihout results refinement.
 ' Inputs:   oModel: Dictionary object which holds all input details required to validate.
 '           SearchType: 'Refined' or anything else. validates results in Results1 and Results2 columns based on
 '           value passed.
 ' Returns:  N/A   
'*****************************************************************************************************************
Function EnoviaSearch_ValidateFullTextSearch(oModel,SearchType) 
  Set objEnoviaFullTextSearchName = objGetObject(OR_EnoviaFullTextSearch_Name,g_SearchPageURL,"")
  Set objEnoviaFullTextSearchFields = objGetObject(OR_EnoviaFullTextSearch_Fields,g_SearchPageURL,"")
  If objEnoviaFullTextSearchName.Exists Then  
      nRowCount =  objEnoviaFullTextSearchName.rowCount-1
      If nRowCount > 0 and Trim(objEnoviaFullTextSearchFields.Cell(1,0).ContentText) <> "No Objects Found" Then
         If EnoviaSearch_ValCheck(oModel.Common.ResultsMain) = True and SearchType <> "Refined" Then
            Call EnoviaFullTextSearch_Validate_Results(oModel.Common.SearchValue,oModel.Common.ResultsMain,False,objEnoviaFullTextSearchName,1,oModel)
          ElseIf EnoviaSearch_ValCheck(oModel.Common.ResultsRefined) = True Then             
            Call EnoviaFullTextSearch_Validate_Results(oModel.Common.SearchValue,oModel.Common.ResultsRefined,False,objEnoviaFullTextSearchName,1,oModel)                                                       
          Else
            nCol = EnoviaSearch_FindTableColumnNumber( "FullText" , "Revision")
            Call EnoviaSearch_ValidateSearchFields("Revision",oModel.Revision.Revision,"",objEnoviaFullTextSearchFields,nRowCount,nCol)
            nCol = EnoviaSearch_FindTableColumnNumber( "FullText" , "Type")
            Call EnoviaSearch_ValidateSearchFields("Type",oModel.Common.sType,"",objEnoviaFullTextSearchFields,nRowCount,nCol)
            nCol = EnoviaSearch_FindTableColumnNumber( "FullText" , "State")
            Call EnoviaSearch_ValidateSearchFields("State",oModel.Common.State,"",objEnoviaFullTextSearchFields,nRowCount,nCol)
            nCol = EnoviaSearch_FindTableColumnNumber( "FullText" , "Plants")
            Call EnoviaSearch_ValidateSearchFields("Plants",oModel.Plant,"",objEnoviaFullTextSearchFields,nRowCount,nCol)            
         End If       
      Else    
        Log.Warning "No records found for the FullText Search:"&oModel.Common.SearchValue
        Call Err.Raise (64401,"EnoviaSearch_ValidateFullTextSearch","No records found for the FullText Search:"&oModel.Common.SearchValue)     
    End If
  End If 
  Set nRowCount = Nothing  
End Function

'*****************************************************************************************************************
 ' Purpose:  To Validate Find Product search results displayed with/wihout results refinement.
 ' Inputs:   oModel: Dictionary object which holds all input details required to validate.
 '           SearchType: 'Refined' or anything else. validates results in Results1 and Results2 columns based on
 '           value passed.
 ' Returns:  N/A   
'*****************************************************************************************************************
Function EnoviaSearch_ValidateFindProductSearch(oModel,SearchType) 
  Set objEnoviaFindProductSearchName = objGetObject(OR_EnoviaFullTextSearch_Name,g_SearchPageURL,"")
  Set objEnoviaFindProductSearchFields = objGetObject(OR_EnoviaFullTextSearch_Fields,g_SearchPageURL,"")
  If objEnoviaFindProductSearchName.Exists Then  
      nRowCount =  objEnoviaFindProductSearchName.rowCount-1
      If nRowCount > 0 and Trim(objEnoviaFindProductSearchFields.Cell(1,0).ContentText) <> "No Objects Found" Then
         If EnoviaSearch_ValCheck(oModel.Common.ResultsMain) = True and SearchType <> "Refined" Then
            Call EnoviaFindProductSearch_Validate_Results(oModel.Common.SearchValue,oModel.Common.ResultsMain,False,objEnoviaFindProductSearchName,1,oModel)
          ElseIf EnoviaSearch_ValCheck(oModel.Common.ResultsRefined) = True Then             
            Call EnoviaFindProductSearch_Validate_Results(oModel.Common.SearchValue,oModel.Common.ResultsRefined,False,objEnoviaFindProductSearchName,1,oModel)        
          Else       
            nCol = EnoviaSearch_FindTableColumnNumber( "FindProduct" , "Revision")
            Call EnoviaSearch_ValidateSearchFields("Revision",oModel.Revision.Revision,"",objEnoviaFindProductSearchFields,nRowCount,nCol)
            nCol = EnoviaSearch_FindTableColumnNumber( "FindProduct" , "Type")
            Call EnoviaSearch_ValidateSearchFields("Type",oModel.Common.sType,"",objEnoviaFindProductSearchFields,nRowCount,2)
            nCol = EnoviaSearch_FindTableColumnNumber( "FindProduct" , "Specification Sub Type")
            Call EnoviaSearch_ValidateSearchFields("SpecSubType",oModel.SpecSubType,"",objEnoviaFindProductSearchFields,nRowCount,nCol)
            nCol = EnoviaSearch_FindTableColumnNumber( "FindProduct" , "Title")
            Call EnoviaSearch_ValidateSearchFields("Title",oModel.Common.Title,"",objEnoviaFindProductSearchFields,nRowCount,nCol)
            nCol = EnoviaSearch_FindTableColumnNumber( "FindProduct" , "State")
            Call EnoviaSearch_ValidateSearchFields("State",oModel.Common.State,"",objEnoviaFindProductSearchFields,nRowCount,nCol)
            nCol = EnoviaSearch_FindTableColumnNumber( "FindProduct" , "Originator")
            Call EnoviaSearch_ValidateSearchFields("Originator",oModel.Originator,"",objEnoviaFindProductSearchFields,nRowCount,nCol)      
          End If
        Else
          Log.Warning "No records found for the FindProductdata Search:"&oModel.Common.SearchValue
          Call Err.Raise (64401,"EnoviaSearch_ValidateFindProductdataSearch","No records found for the FindProductdata Search:"&oModel.Common.SearchValue)
      End If 
    Else    
      Log.Warning "No records found for the Named Search:"&oModel.Common.SearchValue
      Call Err.Raise (64401,"EnoviaSearch_ValidateFindProductdataSearch","No records found for the FindProductdata Search:"&oModel.Common.SearchValue)     
  End If 
  Set nRowCount = Nothing  
End Function
'**************************************************************************
' Functions Common for all search types.  
'**************************************************************************
'###############################################################################################################################
'Function Name                : EnoviaSearch_ValidateSearchFields
'Description                  : Validates All Serachfield values for Named, FullText and FindProduct data searches.
'Arguments                    : sColumnName: Column Name under test.
'                               sSearchFieldValue: Searched value
'                               bCaseSensitive: Case sensitive
'                               oEnoviaSearchField: Search field object.
'                               nRowCount:Cell Row value.
'                               nCol:Call column value.
'Return Value                 : NA
'Author                       : Balachandra.v
'Creation Date                : 12-6-2017
'Special Conditions           : NA                                     
'Revision History             : NA
'Revision Date                : NA
'###############################################################################################################################
Function EnoviaSearch_ValidateSearchFields(sColumnName, sSearchFieldValue,bCaseSensitive, oEnoviaSearchField,nRowCount,nCol)  
  If bCaseSensitive = "" Then
      bCaseSensitive = False
  End If 
  nFindCount = 0
  Isfound = False  
  If IsArray(sSearchFieldValue) Then
      For j=0 to Ubound(sSearchFieldValue)
          For i = 1 to nRowCount
              If aqString.Compare(Trim(sSearchFieldValue(j)), Trim(oEnoviaSearchField.Cell(i,nCol).ContentText), bCaseSensitive) = 0 Then
                  nFindCount =  nFindCount + 1                  
              End If
          Next
      Next    
  End If
  If not IsArray(sSearchFieldValue) Then
      For i = 1 to nRowCount
      If sSearchFieldValue = "" and oEnoviaSearchField.Cell(i,nCol).ContentText <> "" Then
            nFindCount = nRowCount                 
      End If 
      If nFindCount <> nRowCount Then          
              If aqString.Compare(Trim(sSearchFieldValue), Trim(oEnoviaSearchField.Cell(i,nCol).ContentText), bCaseSensitive) = 0 Then
                  nFindCount =  nFindCount + 1        
              End If         
      End If
      Next
  End If
  If cDbl(nFindCount) = cDbl(nRowCount) Then
      Log.Message "Field: "&sColumnName &" Validated Successfully" 
    Else
      Log.Warning "Field: "&sColumnName &" Validation Failed"
      Call Err.Raise (64402,"EnoviaSearch_ValidateSearch","Field: "&sColumnName &" Validation Failed")  
  End If
  Set i = Nothing
  Set j = Nothing
  Set nFindCount = Nothing  
End Function

'###############################################################################################################################
'Function Name                : EnoviaSearch_Validate_ResultsRule1
'Description                  : Validates single result displayed for Named, FullText and FindProduct data searches.
'Arguments                    : sSearchValue:Searched value.
'                               sSearchResults: Expecetd Results.
'                               bCaseSensitive: Case sensitive True/False.
'                               oEnoviaSearchField: Search field object.                           
'                               nColVal: column value.
'Return Value                 : NA
'Author                       : Balachandra.v
'Creation Date                : 12-6-2017
'Special Conditions           : Results Columns in input data excel should contain results expected.                                      
'Revision History             : NA
'Revision Date                : NA
'###############################################################################################################################
Function EnoviaSearch_Validate_ResultsRule1(sSearchValue,sSearchResults,bCaseSensitive,oEnoviaSearchField,nColVal,sSearchtype,oModel)
  If sSearchtype = "Named" Then
  Set objSearchFields = objGetObject(OR_EnoviaSearch_Fields,"","")  
  Else
  Set objSearchFields = objGetObject(OR_EnoviaFullTextSearch_Fields,g_SearchPageURL,"")  
  End If         
  nRowCount = oEnoviaSearchField.rowCount-1
  nFindCount = 0 
  For i= 1 to nRowCount
      stempfetchvalue = oEnoviaSearchField.Cell(i,nColVal).ContentText
      stempfetchvalue = Replace(stempfetchvalue, vbCr,"")
      stempfetchvalue = Replace(stempfetchvalue, vbLf,"")
      stempfetchvalue = Trim(stempfetchvalue)
      If aqString.Find(sSearchResults,"$") >= 0 then
          TempArray =  Split(trim(sSearchResults),"$")
          sTempSearchvalue = Trim(TempArray(0))
          sTempRevision = Trim(TempArray(1))
          
          If aqString.Compare(sTempSearchvalue, stempfetchvalue, bCaseSensitive) = 0 Then
              nCol = EnoviaSearch_FindTableColumnNumber( sSerachtype , "Revision")              
              Call EnoviaSearch_ValidateSearchFields("Revision",oModel.Revision.Revision,"",objSearchFields,nRowCount,nCol)
              nFindCount = nFindCount + 1            
          End If
        ElseIf aqString.Compare(sSearchResults,stempfetchvalue, bCaseSensitive) = 0 Then
          nFindCount = nFindCount + 1
      End If        
  Next 
  If nFindCount = nRowCount Then
      Log.Message "Results are displayed are as expected - Rule1"
    Else
      Log.Warning "Results are NOT displayed are as expected - Rule1" 
      Call Err.Raise (64403,"EnoviaSearch_ValidateSearch","Results are NOT displayed as expected") 
  End If
  Set i = Nothing
  Set nRowCount = Nothing
End Function

'###############################################################################################################################
'Function Name                : EnoviaSearch_Validate_ResultsRule2
'Description                  : Validates multiple results displayed for Named, FullText and FindProduct data searches.
'Arguments                    : sSearchValue:Searched value.
'                               sSearchResults: Expecetd Results.
'                               bCaseSensitive: Case sensitive True/False.
'                               oEnoviaSearchField: Search field object.                           
'                               nColVal: column value.
'Return Value                 : NA
'Author                       : Balachandra.v
'Creation Date                : 12-6-2017
'Special Conditions           : Results Columns in input data excel should contain results expected.                                     
'Revision History             : NA
'Revision Date                : NA
'###############################################################################################################################
Function EnoviaSearch_Validate_ResultsRule2(sSearchValue,sSearchResults,bCaseSensitive,oEnoviaSearchField,nColVal,sSearchtype,oModel) 
  If sSearchtype = "Named" Then
      Set objSearchFields = objGetObject(OR_EnoviaSearch_Fields,"","")  
    Else
      Set objSearchFields = objGetObject(OR_EnoviaFullTextSearch_Fields,g_SearchPageURL,"")  
  End If                   
  nRowCount = oEnoviaSearchField.rowCount-1
  nFindCount = 0 
  For i = 0 to Ubound(sSearchResults)
      For j=1 to nRowCount  
      stempfetchvalue = oEnoviaSearchField.Cell(j,nColVal).ContentText
      stempfetchvalue = Replace(stempfetchvalue, vbCr,"")
      stempfetchvalue = Replace(stempfetchvalue, vbLf,"")
      stempfetchvalue = Trim(stempfetchvalue)     
          If aqString.Find(sSearchResults(i),"$") >= 0 then
              TempArray =  Split(sSearchResults(i),"$")
              sTempSearchvalue = Trim(TempArray(0))
              sTempRevision = Trim(TempArray(1))
              If aqString.Compare(sTempSearchvalue, stempfetchvalue, bCaseSensitive) = 0 Then
                  nCol = EnoviaSearch_FindTableColumnNumber( sSerachtype , "Revision")              
                  'Call EnoviaSearch_ValidateSearchFields("Revision",oModel.Revision.Revision,"",objSearchFields,nRowCount,nCol)
                  If aqString.Compare(sTempRevision, Trim(objSearchFields.Cell(j,nCol).ContentText), bCaseSensitive) = 0 Then
                    nFindCount =  nFindCount + 1        
                  End If                         
              End If
            ElseIf aqString.Compare(Trim(sSearchResults(i)),stempfetchvalue, bCaseSensitive) = 0 Then 
              nFindCount =  nFindCount + 1     
          End If          
      Next        
  Next
  If nFindCount = nRowCount Then
      Log.Message "Results are displayed are as expected - Rule2"
    Else
      Log.Warning "Results are NOT displayed are as expected - Rule2"
       Call Err.Raise (64404,"EnoviaSearch_ValidateSearch","Results are NOT displayed as expected")   
  End If
  Set i = Nothing
  Set j = Nothing
  Set nRowCount = Nothing
End Function 

'###############################################################################################################################
'Function Name                : EnoviaSearch_FindTableColumnNumber
'Description                  : Finds and returns actual column index for a column Name.Works for Named, FullText and FindProduct
'                               data searches.
'Arguments                    : sSearchType:Search type - Named,FullText or FindProduct.
'                               sColumnName: Column name for column index required.
'Return Value                 : Column Index.
'Author                       : Balachandra.v
'Creation Date                : 12-6-2017
'Special Conditions           : NA                                     
'Revision History             : NA
'Revision Date                : NA
'###############################################################################################################################
Function EnoviaSearch_FindTableColumnNumber(sSearchType,sColumnName)
  If Ucase(sSearchType) = Ucase("FullText") or Ucase(sSearchType) = Ucase("FindProduct")then
      Set objEnoviaSearchName = objGetObject(OR_EnoviaSearch_Fields_Header,g_SearchPageURL,"")
      If objEnoviaSearchName.Exists Then 
      Select case sColumnName
        Case "Type"          
              Set oRevision_Label=objEnoviaSearchName.FindChild("contentText","Type",6)
              nColumnIndex=(oRevision_Label.ColumnIndex)/2         
        Case "State"
              Set oRevision_Label=objEnoviaSearchName.FindChild("contentText","State",6)
              nColumnIndex=(oRevision_Label.ColumnIndex)/2          
        Case "Plants"
              Set oRevision_Label=objEnoviaSearchName.FindChild("contentText","Plants",6)
              nColumnIndex=(oRevision_Label.ColumnIndex)/2          
        Case "Revision"          
              Set oRevision_Label=objEnoviaSearchName.FindChild("contentText","Revision",6)
              nColumnIndex=(oRevision_Label.ColumnIndex)/2
        Case "Specification Sub Type"          
              Set oRevision_Label=objEnoviaSearchName.FindChild("contentText","Specification SubType",6)
              nColumnIndex=(oRevision_Label.ColumnIndex)/2
        Case "Title"          
              Set oRevision_Label=objEnoviaSearchName.FindChild("contentText","Title/SAP Description",6)
              nColumnIndex=(oRevision_Label.ColumnIndex)/2
        Case "Originator"          
              Set oRevision_Label=objEnoviaSearchName.FindChild("contentText","Originator",6)
              nColumnIndex=(oRevision_Label.ColumnIndex)/2
        Case "Owner"          
              Set oRevision_Label=objEnoviaSearchName.FindChild("contentText","Revision",6)
              nColumnIndex=(oRevision_Label.ColumnIndex)/2               
      End Select
      End If
  ElseIf  Ucase(sSearchType) = Ucase("Named") Then
      Set objEnoviaFullTextSearchName = objGetObject(OR_EnoviaSearch_Fields_Header,"","")
      If objEnoviaFullTextSearchName.Exists Then       
      Select case sColumnName
        Case "Revision"          
              Set oRevision_Label=objEnoviaFullTextSearchName.FindChild("contentText","Revision",6)
              nColumnIndex=(oRevision_Label.ColumnIndex)/2
              Log.Message nColumnIndex          
        Case "Type"         
              Set oRevision_Label=objEnoviaFullTextSearchName.FindChild("contentText","Type",6)
              nColumnIndex=(oRevision_Label.ColumnIndex)/2         
        Case "State"
              Set oRevision_Label=objEnoviaFullTextSearchName.FindChild("contentText","State",6)
              nColumnIndex=(oRevision_Label.ColumnIndex)/2         
         Case "ModifiedDate"  
              Set oRevision_Label=objEnoviaFullTextSearchName.FindChild("contentText","Modified",6)
              nColumnIndex=(oRevision_Label.ColumnIndex)/2         
         Case "OriginatedDate"         
              Set oRevision_Label=objEnoviaFullTextSearchName.FindChild("contentText","Originated",6)
              nColumnIndex=(oRevision_Label.ColumnIndex)/2         
         Case "Title"          
              Set oRevision_Label=objEnoviaFullTextSearchName.FindChild("contentText","Title",6)
              nColumnIndex=(oRevision_Label.ColumnIndex)/2                
         Case "Owner"           
              Set oRevision_Label=objEnoviaFullTextSearchName.FindChild("contentText","Owner",6)
              nColumnIndex=(oRevision_Label.ColumnIndex)/2          
      End Select 
      End If      
  End If   
  Log.Message nColumnIndex                                                 
  EnoviaSearch_FindTableColumnNumber = nColumnIndex                                                       
End Function

'###############################################################################################################################
'Function Name                : EnoviaSearch_Validate_PDFString
'Description                  : Finds whether expected string exits in pdf.
'Arguments                    : oEnoviaSearchField:Search type - Named,FullText or FindProduct.
'                               SStringToValidate: String which has to searched in pdf.
'                               nPDFRowCount: Row Number on which string in a pdf has to be validated.
'                               bCaseSensitive: caseSensitive - True or false.
'Return Value                 : Column Index.
'Author                       : Balachandra.v
'Creation Date                : 12-6-2017
'Special Conditions           : NA                                     
'Revision History             : NA
'Revision Date                : NA
'###############################################################################################################################
Function EnoviaSearch_Validate_PDFString(oEnoviaSearchField, SStringToValidate, nPDFRowCount, bCaseSensitive)
    OR_EnoviaFullTextSearch_Fields = Array("WEBOBJECT", "idStr~ObjectIdentifier", "bodyTable~bodyTable", "")
    Set objEnoviaFullTextSearchFields = objGetObject(OR_EnoviaFullTextSearch_Fields,g_SearchPageURL,"")
    bPdfResult = false   
    IF objEnoviaFullTextSearchFields.Cell(nPDFRowCount,1).ChildCount >= 1 then             
       objEnoviaFullTextSearchFields.Cell(nPDFRowCount,1).Link(0).Image("iconActionPDF_gif").click 
       Delay 8000   
       sFilename = aqFileSystem.GetFolderInfo(aqFileSystem.GetCurrentFolder).ParentFolder.ParentFolder.ParentFolder.ParentFolder.ParentFolder.ParentFolder.Path&"Tempfile.pdf"
       Set s1=Sys.Browser("iexplore").Browserwindow(1)                           
       set frame=s1.findChild("WndClass","Frame Notification Bar",5) 
       Set objdownbtn=frame.findChild("Name","UIAObject(1)",5) 
       IF objdownbtn.Exists then                            
          objdownbtn.Click                                                            
       End IF
       Sys.Keys "[Down][Enter]"
       Set objwnd = Sys.Process(g_strBrowserType).window("*","Save As")
       Set objEdit = objwnd.FindChild("WndClass","Edit",5)
       Set objsavebtn = objwnd.FindChild("WndCaption","&Save")
       IF objEdit.Exists then                            
          objEdit.Keys sFilename       
          objsavebtn.Click                                                     
       End IF
       Delay 2000  
          Set ObjPdfToRead = JavaClasses.org_apache_pdfbox_pdmodel.PDDocument.load_3(sFilename)
          Set ObjPdfTextstripper = JavaClasses.org_apache_pdfbox_util.PDFTextStripper.newInstance()
          STextToCompare = ObjPdfTextstripper.getText_2(ObjPdfToRead)   
       If aqString.Contains(STextToCompare, SStringToValidate, 0, bCaseSensitive) >= 0 Then                                  
            Log.Message "The document contains the string: "&SStringToValidate
            bPdfResult = True                       
          Else                                                                         
            Log.Warning("The document does not contain the specified string "&SStringToValidate)
            Call Err.Raise (64405,"EnoviaSearch_ValidateSearch","The document does not contain the specified string "&SStringToValidate) 
            bPdfResult = false              
        End If                                                                                         
        aqFileSystem.DeleteFile(sFilename)
        Else 
          bPdfResult = false
   End If 
     EnoviaSearch_Validate_PDFString = bPdfResult                                                                        
End Function  
   
'###############################################################################################################################
'Function Name                : EnoviaNameSearch_Validate_Results
'Description                  : Validates results displayed for Named search when Results column is empty.
'Arguments                    : sSearchValue:Searched value.
'                               sSearchResults: Expecetd Results.
'                               bCaseSensitive: Case sensitive True/False.
'                               oEnoviaSearchField: Search field object.                           
'                               nColVal: column value.
'Return Value                 : NA
'Author                       : Balachandra.v
'Creation Date                : 12-6-2017
'Special Conditions           : NA                                      
'Revision History             : NA
'Revision Date                : NA
'###############################################################################################################################
Function EnoviaNameSearch_Validate_Results(sSearchValue,sSearchResults,bCaseSensitive,oEnoviaSearchField,nColVal,oModel)  
  If bCaseSensitive = "" Then
      bCaseSensitive = False
  End If
  'For Simple search with values in Results column 
  bIsResults = False
  If IsArray(sSearchResults) Then 
      bIsResults = True
      Call EnoviaSearch_Validate_ResultsRule2(sSearchValue,sSearchResults,bCaseSensitive,oEnoviaSearchField,nColVal,"Named",oModel )
    Else
      If sSearchResults <> "" Then
      bIsResults = True
      Call EnoviaSearch_Validate_ResultsRule1(sSearchValue,sSearchResults,bCaseSensitive,oEnoviaSearchField,nColVal,"Named",oModel)
      End If
  End If
  'For SearchValue
  If bIsResults = False Then
      If IsArray(sSearchValue) Then            
          Call EnoviaNameSearch_Validate_ResultsMultiSearch(sSearchValue,bCaseSensitive,oEnoviaSearchField,nColVal)                     
        Else
          If sSearchValue <> "" Then                 
              Call EnoviaNameSearch_Validate_ResultsSingleSearch(sSearchValue,bCaseSensitive,oEnoviaSearchField,nColVal)'For Excat search 
            Else
              Log.Warning "Input search field in excel is blank"
              Call Err.Raise (64406,"EnoviaSearch_ValidateSearch","Input search field in excel is blank") 
          End If 
      End If    
      
  End If
End Function 

'###############################################################################################################################
'Function Name                : EnoviaNameSearch_Validate_ResultsSingleSearch
'Description                  : Validates results displayed for a simple Named search.
'Arguments                    : sSearchValue:Searched value.'                              
'                               bCaseSensitive: Case sensitive True/False.
'                               oEnoviaSearchField: Search field object.                           
'                               nColVal: column value.
'Return Value                 : NA
'Author                       : Balachandra.v
'Creation Date                : 12-6-2017
'Special Conditions           : NA                                      
'Revision History             : NA
'Revision Date                : NA
'###############################################################################################################################
Function EnoviaNameSearch_Validate_ResultsSingleSearch(sSearchValue,bCaseSensitive,oEnoviaSearchField,nColVal)           
  nRowCount = oEnoviaSearchField.rowCount-1
  nFindCount = 0
  For i= 1 to nRowCount
      If WildCardProcesser(sSearchValue,oEnoviaSearchField.Cell(i,nColVal).ContentText, bCaseSensitive) Then 
          nFindCount = nFindCount+1         
      End If
  Next 
  If nFindCount = nRowCount Then 'Each result should match the search value
      Log.Message "Results are displayed as expected - Single Search"
    Else
      Log.Warning "Results are displayed are as expected - For Single Search value"
      Call Err.Raise (64407,"EnoviaSearch_ValidateSearch","Results are NOT displayed as expected - For Single Search value")
  End If
  Set i = Nothing
  Set nRowCount = Nothing
  Set FindCount = Nothing
End Function
 
'###############################################################################################################################
'Function Name                : EnoviaNameSearch_Validate_ResultsMultiSearch
'Description                  : Validates results displayed for a simple Named search with search value Star(*).
'Arguments                    : sSearchValue:Searched value.'                               
'                               bCaseSensitive: Case sensitive True/False.
'                               oEnoviaSearchField: Search field object.                           
'                               nColVal: column value.
'Return Value                 : NA
'Author                       : Balachandra.v
'Creation Date                : 12-6-2017
'Special Conditions           : NA                                      
'Revision History             : NA
'Revision Date                : NA
'###############################################################################################################################
Function EnoviaNameSearch_Validate_ResultsMultiSearch(sSearchValue,bCaseSensitive,oEnoviaSearchField,nColVal)           
  nRowCount = oEnoviaSearchField.rowCount-1
  nFindCount = 0
  For i = 0 to Ubound(sSearchValue)
      For j= 1 to nRowCount
          If WildCardProcesser(sSearchValue(i),oEnoviaSearchField.Cell(j,nColVal).ContentText, bCaseSensitive) Then 
              nFindCount = nFindCount+1                       
          End If          
      Next
  Next     
  If nFindCount = nRowCount Then 'Each result should match the search value
      Log.Message "Results are displayed as expected - For Multiple Search values"
    Else
      Log.Warning "Results dsplayed does not match with search - Rule5"
      Call Err.Raise (64407,"EnoviaSearch_ValidateSearch","Results are NOT displayed as expected - For Multiple Search values")
  End If
  Set i = Nothing
  Set j = Nothing
  Set nRowCount = Nothing
  Set FindCount = Nothing  
 End Function
 
'###############################################################################################################################
'Function Name                : EnoviaFullTextSearch_Validate_Results
'Description                  : Validates results displayed for Fulltext search when Results column is empty.
'Arguments                    : sSearchValue:Searched value.
'                               sSearchResults: Expecetd Results.
'                               bCaseSensitive: Case sensitive True/False.
'                               oEnoviaSearchField: Search field object.                           
'                               nColVal: column value.
'Return Value                 : NA
'Author                       : Balachandra.v
'Creation Date                : 12-6-2017
'Special Conditions           : NA                                      
'Revision History             : NA
'Revision Date                : NA
'###############################################################################################################################
Function EnoviaFullTextSearch_Validate_Results(sSearchValue,sSearchResults,bCaseSensitive,oEnoviaSearchField,nColVal,oModel)  
  If bCaseSensitive = "" Then
      bCaseSensitive = False
  End If
  'For Simple search with values in Results column 
  bIsResults = False
  If IsArray(sSearchResults) Then 
      bIsResults = True
      Call EnoviaSearch_Validate_ResultsRule2(sSearchValue,sSearchResults,bCaseSensitive,oEnoviaSearchField,nColVal,"Full Text",oModel)
    Else
      If sSearchResults <> "" Then
          bIsResults = True
          Call EnoviaSearch_Validate_ResultsRule1(sSearchValue,sSearchResults,bCaseSensitive,oEnoviaSearchField,nColVal,"Full Text",oModel)
      End If
  End If
  'For SearchValue
  If bIsResults = False Then
      If IsArray(sSearchValue) Then          
        Log.Warning "FullText Search with 'pipe' Not expecetd!!!!"  
        Else
          If sSearchValue <> "" Then
              If aqstring.Contains(sSearchValue,"*") >= 0 Then                  
                  Call EnoviaFullTextSearch_Validate_ResultsRule4(sSearchValue,bCaseSensitive,oEnoviaSearchField,nColVal)'For Star
                ElseIf aqstring.Contains(sSearchValue,"?") >= 0 Then 'For String with Question mark
                  Call EnoviaFullTextSearch_Validate_ResultsRule5(sSearchValue,bCaseSensitive,oEnoviaSearchField,nColVal)               
                Else
                  Call EnoviaFullTextSearch_Validate_ResultsRule3(sSearchValue,bCaseSensitive,oEnoviaSearchField,nColVal)'For Excat search 
              End If  
            Else
              Log.Warning "Input search field in excel is blank"
              Call Err.Raise (64407,"EnoviaSearch_ValidateSearch","Input search field in excel is blank")
          End If 
      End If       
  End If
End Function

'###############################################################################################################################
'Function Name                : EnoviaFullTextSearch_Validate_ResultsRule3
'Description                  : Validates results displayed for a simple FullText search.
'Arguments                    : sSearchValue:Searched value.'                              
'                               bCaseSensitive: Case sensitive True/False.
'                               oEnoviaSearchField: Search field object.                           
'                               nColVal: column value.
'Return Value                 : NA
'Author                       : Balachandra.v
'Creation Date                : 12-6-2017
'Special Conditions           : NA                                      
'Revision History             : NA
'Revision Date                : NA
'###############################################################################################################################
Function EnoviaFullTextSearch_Validate_ResultsRule3(sSearchValue,bCaseSensitive,oEnoviaSearchField,nColVal)           
  nRowCount = oEnoviaSearchField.rowCount-1
  nFindCount = 0
  For i= 1 to nRowCount
      If EnoviaSearch_Validate_PDFString(oEnoviaSearchField, sSearchValue,i,bCaseSensitive) Then
          nFindCount =  nFindCount + 1     
      End If     
  Next 
  If nFindCount = nRowCount Then 'Each result should match the search value
      Log.Message "Results are displayed are as expected - Rule3"
    Else
      Log.Warning "Results dsplayed does not match with search - Rule3"
      Call Err.Raise (64407,"EnoviaSearch_ValidateSearch","Column Validation failed")
  End If
  Set i = Nothing
  Set nRowCount = Nothing
  Set FindCount = Nothing
End Function

'###############################################################################################################################
'Function Name                : EnoviaFullTextSearch_Validate_ResultsRule4
'Description                  : Validates results displayed for a simple FullText search with search value Star(*).
'Arguments                    : sSearchValue:Searched value.'                               
'                               bCaseSensitive: Case sensitive True/False.
'                               oEnoviaSearchField: Search field object.                           
'                               nColVal: column value.
'Return Value                 : NA
'Author                       : Balachandra.v
'Creation Date                : 12-6-2017
'Special Conditions           : NA                                      
'Revision History             : NA
'Revision Date                : NA
'###############################################################################################################################
Function EnoviaFullTextSearch_Validate_ResultsRule4(sSearchValue,bCaseSensitive,oEnoviaSearchField,nColVal)           
  nRowCount = oEnoviaSearchField.rowCount-1
  nFindCount = 0 
  If aqString.Find(sSearchValue,"*") = 0 then
      sSearchtype = "Type1" 'Star at starting *cup
      Log.Message "Type1"
    ElseIf aqString.Find(sSearchValue,"*")+1 = aqString.GetLength(sSearchValue) Then
      sSearchtype = "Type3" 
      Log.Message "Type3" 'Star at End cup*
    ElseIf aqString.Find(sSearchValue,"*") < aqString.GetLength(sSearchValue) Then
      sSearchtype = "Type2" 
      Log.Message "Type2"'Star inbetween End cup*123
    Else
      Log.Message "Search value with * with current data type is not handled in script for now"
  End If
  If sSearchtype = "Type1"  or sSearchtype = "Type3" Then
      sSearchValueModified = aqString.Replace(sSearchValue, "*", "")
      sSearchValueModified = Trim(sSearchValueModified)
      For i= 1 to nRowCount
          If EnoviaSearch_Validate_PDFString(oEnoviaSearchField, sSearchValueModified,i,bCaseSensitive) Then
              nFindCount =  nFindCount + 1 
          End If     
      Next 
  End If
  If sSearchtype = "Type2" Then 'Star inbetween End cup*123
      TempArray =  Split(sSearchValue,"*")
      sSearchValue1 = Trim(TempArray(0))
      sSearchValue2 = Trim(TempArray(Ubound(TempArray)))
      nSearchValueLentgh = aqString.GetLength(sSearchValue2) 
      For i= 1 to nRowCount
          If EnoviaSearch_Validate_PDFString(oEnoviaSearchField, sSearchValue1,i,bCaseSensitive) Then
            If EnoviaSearch_Validate_PDFString(oEnoviaSearchField, sSearchValue2,i,bCaseSensitive) Then
              nFindCount =  nFindCount + 1 
            End If    
          End If     
      Next 
  End If
  If nFindCount = nRowCount Then 'Each result should match the search value
      Log.Message "Results are displayed are as expected - Rule4"&sSearchtype
    Else
      Log.Warning "Results dsplayed does not match with search - Rule4"
      Call Err.Raise (64407,"EnoviaSearch_ValidateSearch","Column Validation failed")
  End If
  Set i = Nothing
  Set nRowCount = Nothing
  Set FindCount = Nothing
  Set nSearchValueLentgh = Nothing
  Set sSearchtype = Nothing  
End Function

'###############################################################################################################################
'Function Name                : EnoviaFullTextSearch_Validate_ResultsRule5
'Description                  : Validates results displayed for a FullText search with search value having multiple values seperated with pipe(|).
'Arguments                    : sSearchValue:Searched value.'                               
'                               bCaseSensitive: Case sensitive True/False.
'                               oEnoviaSearchField: Search field object.                           
'                               nColVal: column value.
'Return Value                 : NA
'Author                       : Balachandra.v
'Creation Date                : 12-6-2017
'Special Conditions           : NA                                      
'Revision History             : NA
'Revision Date                : NA
'###############################################################################################################################
Function EnoviaFullTextSearch_Validate_ResultsRule5(sSearchValue,bCaseSensitive,oEnoviaSearchField,nColVal)           
  nRowCount = oEnoviaSearchField.rowCount-1
  nFindCount = 0
  ArraySearchValue = Split(sSearchValue,"?")
  ArraySearchValue1 = ArraySearchValue(0)
  ArraySearchValue2 = ArraySearchValue(Ubound(ArraySearchValue)) 
  For i= 1 to nRowCount
      If EnoviaSearch_Validate_PDFString(oEnoviaSearchField, ArraySearchValue1,i,bCaseSensitive) Then
          If EnoviaSearch_Validate_PDFString(oEnoviaSearchField, ArraySearchValue2,i,bCaseSensitive) Then
              nFindCount =  nFindCount + 1 
          End If    
      End If     
  Next   
  If nFindCount = nRowCount Then 'Each result should match the search value
      Log.Message "Results are displayed are as expected - Rule5"
    Else
      Log.Warning "Results dsplayed does not match with search - Rule5"
      Call Err.Raise (64407,"EnoviaSearch_ValidateSearch","Column Validation failed")
  End If
  Set i = Nothing
  Set nRowCount = Nothing
  Set FindCount = Nothing
End Function

'###############################################################################################################################
'Function Name                : EnoviaFindProductSearch_Validate_Results
'Description                  : Validates results displayed for Find Productdata search when results column is empty.
'Arguments                    : sSearchValue:Searched value.
'                               sSearchResults: Expecetd Results.
'                               bCaseSensitive: Case sensitive True/False.
'                               oEnoviaSearchField: Search field object.                           
'                               nColVal: column value.
'Return Value                 : NA
'Author                       : Balachandra.v
'Creation Date                : 12-6-2017
'Special Conditions           : NA                                      
'Revision History             : NA
'Revision Date                : NA
'###############################################################################################################################

Function EnoviaFindProductSearch_Validate_Results(sSearchValue,sSearchResults,bCaseSensitive,oEnoviaSearchField,nColVal,oModel)  
  If bCaseSensitive = "" Then
      bCaseSensitive = False
  End If
  'For Simple search with values in Results column 
  bIsResults = False
  If IsArray(sSearchResults) Then 
      bIsResults = True
      Call EnoviaSearch_Validate_ResultsRule2(sSearchValue,sSearchResults,bCaseSensitive,oEnoviaSearchField,nColVal,"FindProduct",oModel)
    Else
      If sSearchResults <> "" Then
          bIsResults = True
          Call EnoviaSearch_Validate_ResultsRule1(sSearchValue,sSearchResults,bCaseSensitive,oEnoviaSearchField,nColVal,"FindProduct",oModel)
      End If
  End If
  'For SearchValue
  If bIsResults = False Then
      If IsArray(sSearchValue) Then          
        Log.Warning "Find Product Search with 'pipe' Not expecetd!!!!"  
        Else
          If sSearchValue <> "" Then
              If aqstring.Contains(sSearchValue,"*") >= 0 or aqstring.Contains(sSearchValue,"+") >= 0 Then                  
                  Call EnoviaFindProductSearch_Validate_ResultsRule4(sSearchValue,bCaseSensitive,oEnoviaSearchField,nColVal)'For Star
                ElseIf aqstring.Contains(sSearchValue,"?") >= 0 Then 'For String with Question mark
                  Call EnoviaFindProductSearch_Validate_ResultsRule5(sSearchValue,bCaseSensitive,oEnoviaSearchField,nColVal)               
                Else
                  Call EnoviaFindProductSearch_Validate_ResultsRule3(sSearchValue,bCaseSensitive,oEnoviaSearchField,nColVal)'For Excat search 
              End If  
            Else
              Log.Warning "Input search field in excel is blank"
              Call Err.Raise (64407,"EnoviaSearch_ValidateSearch","Input search field in excel is blank")
          End If 
      End If       
  End If
End Function

'###############################################################################################################################
'Function Name                : EnoviaFindProductSearch_Validate_ResultsRule3
'Description                  : Validates results displayed for a simple Find Productdata search.
'Arguments                    : sSearchValue:Searched value.'                              
'                               bCaseSensitive: Case sensitive True/False.
'                               oEnoviaSearchField: Search field object.                           
'                               nColVal: column value.
'Return Value                 : NA
'Author                       : Balachandra.v
'Creation Date                : 12-6-2017
'Special Conditions           : NA                                      
'Revision History             : NA
'Revision Date                : NA
'###############################################################################################################################
Function EnoviaFindProductSearch_Validate_ResultsRule3(sSearchValue,bCaseSensitive,oEnoviaSearchField,nColVal)           
  nRowCount = oEnoviaSearchField.rowCount-1
  nFindCount = 0
  For i= 1 to nRowCount
      If EnoviaSearch_Validate_PDFString(oEnoviaSearchField, sSearchValue,i,bCaseSensitive) Then
          nFindCount =  nFindCount + 1     
      End If     
  Next 
  If nFindCount = nRowCount Then 'Each result should match the search value
      Log.Message "Results are displayed are as expected - Rule3"
    Else
      Log.Warning "Results dsplayed does not match with search - Rule3"
      Call Err.Raise (64407,"EnoviaSearch_ValidateSearch","Column Validation failed")
  End If
  Set i = Nothing
  Set nRowCount = Nothing
  Set FindCount = Nothing
End Function

'###############################################################################################################################
'Function Name                : EnoviaFindProductSearch_Validate_ResultsRule4
'Description                  : Validates results displayed for a simple Find Productdata search with search value Star(*).
'Arguments                    : sSearchValue:Searched value.'                               
'                               bCaseSensitive: Case sensitive True/False.
'                               oEnoviaSearchField: Search field object.                           
'                               nColVal: column value.
'Return Value                 : NA
'Author                       : Balachandra.v
'Creation Date                : 12-6-2017
'Special Conditions           : NA                                      
'Revision History             : NA
'Revision Date                : NA
'###############################################################################################################################
Function EnoviaFindProductSearch_Validate_ResultsRule4(sSearchValue,bCaseSensitive,oEnoviaSearchField,nColVal)           
  nRowCount = oEnoviaSearchField.rowCount-1
  nFindCount = 0 
  If aqString.Find(sSearchValue,"*") = 0 or aqString.Find(sSearchValue,"+") = 0 Then
      sSearchtype = "Type1" 'Star at starting *cup
      Log.Message "Type1"
    ElseIf aqString.Find(sSearchValue,"*")+1 = aqString.GetLength(sSearchValue) or aqString.Find(sSearchValue,"+")+1 = aqString.GetLength(sSearchValue) Then
      sSearchtype = "Type3" 
      Log.Message "Type3" 'Star at End cup*
    ElseIf aqString.Find(sSearchValue,"*") < aqString.GetLength(sSearchValue) or aqString.Find(sSearchValue,"+") < aqString.GetLength(sSearchValue)Then
      sSearchtype = "Type2" 
      Log.Message "Type2"'Star inbetween End cup*123
    Else
      Log.Message "Search value with * with current data type is not handled in script for now"
  End If
  If sSearchtype = "Type1"  or sSearchtype = "Type3" Then
      sSearchValueModified = aqString.Replace(sSearchValue, "*", "")
      sSearchValueModified = aqString.Replace(sSearchValue, "+", "")
      sSearchValueModified = Trim(sSearchValueModified)
      For i= 1 to nRowCount
          If EnoviaSearch_Validate_PDFString(oEnoviaSearchField, sSearchValueModified,i,bCaseSensitive) Then
              nFindCount =  nFindCount + 1 
          End If     
      Next 
  End If
  If sSearchtype = "Type2" Then 'Star inbetween End cup*123
      If aqstring.Contains(sSearchValue,"*") >= 0 Then      
          TempArray =  Split(sSearchValue,"*")
        Elseif aqstring.Contains(sSearchValue,"+") >= 0 Then
          TempArray =  Split(sSearchValue,"+")
      End If
      sSearchValue1 = Trim(TempArray(0))
      sSearchValue2 = Trim(TempArray(Ubound(TempArray)))
      nSearchValueLentgh = aqString.GetLength(sSearchValue2) 
      For i= 1 to nRowCount
          If EnoviaSearch_Validate_PDFString(oEnoviaSearchField, sSearchValue1,i,bCaseSensitive) Then
            If EnoviaSearch_Validate_PDFString(oEnoviaSearchField, sSearchValue2,i,bCaseSensitive) Then
              nFindCount =  nFindCount + 1 
            End If    
          End If     
      Next 
  End If
  If nFindCount = nRowCount Then 'Each result should match the search value
      Log.Message "Results are displayed are as expected - Rule4"&sSearchtype
    Else
      Log.Warning "Results dsplayed does not match with search - Rule4"
      Call Err.Raise (64407,"EnoviaSearch_ValidateSearch","Column Validation failed")
  End If
  Set i = Nothing
  Set nRowCount = Nothing
  Set FindCount = Nothing
  Set nSearchValueLentgh = Nothing
  Set sSearchtype = Nothing  
End Function

'###############################################################################################################################
'Function Name                : EnoviaFindProductSearch_Validate_ResultsRule5
'Description                  : Validates results displayed for a Find Productdata search with search value having multiple values seperated with pipe(|).
'Arguments                    : sSearchValue:Searched value.'                               
'                               bCaseSensitive: Case sensitive True/False.
'                               oEnoviaSearchField: Search field object.                           
'                               nColVal: column value.
'Return Value                 : NA
'Author                       : Balachandra.v
'Creation Date                : 12-6-2017
'Special Conditions           : NA                                      
'Revision History             : NA
'Revision Date                : NA
'###############################################################################################################################
Function EnoviaFindProductSearch_Validate_ResultsRule5(sSearchValue,bCaseSensitive,oEnoviaSearchField,nColVal)           
  nRowCount = oEnoviaSearchField.rowCount-1
  nFindCount = 0
  ArraySearchValue = Split(sSearchValue,"?")
  ArraySearchValue1 = ArraySearchValue(0)
  ArraySearchValue2 = ArraySearchValue(Ubound(ArraySearchValue)) 
  For i= 1 to nRowCount
      If EnoviaSearch_Validate_PDFString(oEnoviaSearchField, ArraySearchValue1,i,bCaseSensitive) Then
          If EnoviaSearch_Validate_PDFString(oEnoviaSearchField, ArraySearchValue2,i,bCaseSensitive) Then
              nFindCount =  nFindCount + 1 
          End If    
      End If     
  Next   
  If nFindCount = nRowCount Then 'Each result should match the search value
      Log.Message "Results are displayed are as expected - Rule5"
    Else
      Log.Warning "Results dsplayed does not match with search - Rule5"
      Call Err.Raise (64407,"EnoviaSearch_ValidateSearch","Column Validation failed")
  End If
  Set i = Nothing
  Set nRowCount = Nothing
  Set FindCount = Nothing
End Function
'###############################################################################################################################
'Function Name                : WildCardProcesser
'Description                  : Compares two strings with/without wild cards.
'Arguments                    : svalue:Input string.'                               
'                               sResult: String where to look.
'                               CaseSensitive: Case sensitive True/False.                                               
'Return Value                 : True/False
'Author                       : Balachandra.v
'Creation Date                : 12-6-2017
'Special Conditions           : NA                                      
'Revision History             : NA
'Revision Date                : NA
'###############################################################################################################################
Function WildCardProcesser(svalue,sResult, CaseSensitive)
  IsSkip = False
  PassCount = 0
  nValueLength =  aqString.GetLength(svalue)
  nResultLength = aqString.GetLength(sResult)
  If nResultLength >= nValueLength Then
      j=0
      k = 0
      For i=0 to nValueLength-1
          If aqString.Find(svalue,"*") = 0 or aqString.Find(svalue,"*")+1 = aqString.GetLength(svalue)Then
              sSearchValueModified = aqString.Replace(svalue, "*", "")    
              sSearchValueModified = Trim(sSearchValueModified)
              If aqString.Compare(sSearchValueModified, sResult, CaseSensitive) = 0 Then
                  PassCount = nValueLength
                  Exit for
              End If
          End If
          m =j+i
          n =k+i   
          TempValchar = aqString.GetChar(svalue, m)
          TempReschar = aqString.GetChar(sResult, n)
          If TempValchar = "?" or TempValchar = "+"Then
              TempValchar = TempReschar
          End If
          If TempValchar = "*" Then
              P = m+1
              If P < nValueLength Then 
                  TempValcharnext = aqString.GetChar(svalue, P)
                  nNextReschar = aqString.Contains(sResult, TempValcharnext, n, CaseSensitive)
                  If nNextReschar >= n Then
                      IsSkip = true
                      toadd= nNextReschar - n -1
                      k = k+toadd         
                  End If          
                  TempValchar = TempReschar
                Else
                  TempValchar = TempReschar
              End If             
          End If   
          If TempReschar = TempValchar or IsSkip = True Then
              PassCount = PassCount+1      
              IsSkip = False
          End If  
      Next
    Else
      If aqString.Find(svalue,"*") = 0 or aqString.Find(svalue,"*")+1 = aqString.GetLength(svalue)Then
          sSearchValueModified = aqString.Replace(svalue, "*", "")    
          sSearchValueModified = Trim(sSearchValueModified)
          If aqString.Compare(sSearchValueModified, sResult, CaseSensitive) = 0 Then
              PassCount = nValueLength        
          End If   
      End If     
  End If  
  If PassCount = nValueLength Then
      bResult = True         
    Else
      bResult = False
  End If 
  WildCardProcesser = bResult
End Function



