'USEUNIT WebObjectLib
'USEUNIT Login_OR
'USEUNIT ExcelUtils



'Description  : Function to Check order of fields in a given page
'Inputs       : SheetName - SheetName in excel containing the Fields in the expected order
               'Filename - File Name of the Excel sheet
'Output       : None               
'Author       : Swarna  

Sub EnoviaPDT_CheckEditableFields(sSheetName,sFileName)
  sColumnName = "Field"
  sColumnName1="Editable"
  sCurrentFolder = aqFileSystem.GetCurrentFolder
  sProjectFolderName = "EnoviaPartCreation2"
  sFilePath = aqFileSystem.GetFolderInfo(aqFileSystem.GetCurrentFolder).ParentFolder.ParentFolder.Path&"Files\PDT\"&sFileName&".xlsx"
  
  Select Case Ucase(sSheetName)
    Case "CREATE"
      if Ucase(sFileName)="VIRTUAL INTERMEDIATE" then
        Set oParent = objGetObject(CreatePage_Table,"","")
      else
       Set oParent = objGetObject(CreatePage_Table,"https://*.pg.com/enovia/common/emxCreate.jsp","")
      end if
    Case "ATTRIBUTES"
      Set oParent = objGetObject(CreatePage_Table,"","")
    Case "TABLES"
      Set oParent = objGetObject(Tables_Product,"","")
    Case "TABLES WEIGHT"
      Set oParent = objGetObject(Tables_Product,"","")
      Sys.HighlightObject(oparent)
    Case "NOTES"
      Set oParent = objGetObject(Notes_Product,"","")
    Case "COPY"
      Set oParent = objGetObject(CreatePage_Table,"https://*.pg.com/enovia/common/emxNavigatorDialog.jsp","")
    Case "MASTER"
      Set oParent = objGetObject(CreatePage_Table,"","")
   Case Else
      Log.Error "Application Page Name given is not Valid"
      Exit Sub    
  End Select

  arrFields = EnoviaPDT_GetColumnValues(sSheetName,sFilePath,sColumnName)
  arrFields1 = EnoviaPDT_GetColumnValues(sSheetName,sFilePath,sColumnName1)
  ReDim arrSourceIndex(Ubound(arrFields)) 
  FieldFound = True
  Set oParentobj = oParent 
  Redim arrFieldNotEditable(Ubound(arrFields))
  l = 0   'initializing into a another variable as some tabs need to use 2 different Parent objects
  For i = 0 to Ubound(arrFields)
    if Ucase(sSheetName)="TABLES" or Ucase(sSheetName)="TABLES WEIGHT" then
      Set oParentobj1=oParentobj.FindChild("objectIdentifier","headTable",10)
      Set FieldArray=oParentobj1.FindChild("contentText",arrFields(i),10)
      Log.Enabled=False
      'Applicable for the first field of a table (No.)
       if i=0 then 
          Set FieldArray1=objGetObject(Tables1_Product,"","")
          Set FieldArray1=FieldArray1.FindChild("ObjectIdentifier","treeBodyTable",6)
          set FieldArray1=FieldArray1.FindChild("Name"," Cell(1,1) ",2)
        else
        'Applicable for the remaining fields in Tables tab
          ColumnIndex1=(FieldArray.ColumnIndex)/2
          Set FieldArray1=oParentobj.Find("ColumnIndex",ColumnIndex1,4)
       end if
       FieldArray1.DblClick (FieldArray1.Width)*0.75,(FieldArray1.offsetHeight)*0.5
       'Gets object for Floating Window
       set obj5=objGetObject(Tables_ElementsPnl1,"","500")
       if (obj5 is Nothing) = False then
        Set obj5Child=obj5.FindChild("ObjectIdentifier","formField",5)
        var=EnoviaPDT_CheckEditable(obj5Child)
        if obj5.Exists then
          'oParentobj.Click' 500,200
          obj5.Keys("[Esc]")
        end if
       else
        var="No"
       end if
       'Applicable for Notes Tab
    elseif Ucase(sSheetName)="NOTES" then
      if arrFields(i)="No." then
        set obj1=oParentobj.FindChild("objectIdentifier","treeBodyTable",6)
        set Cell=obj1.FindChild("Name"," Cell(1,1) ",2)
      elseif arrFields(i)="Notes" then
        set obj1=oParentobj.FindChild("objectIdentifier","BodyTable",6)
        set Cell=obj1.FindChild("Name"," Cell(1,0) ",2)
      end if
      Cell.dblClick
      'Gets object for Floating Window
      set obj5=objGetObject(Tables_ElementsPnl1,"","500")
       if (obj5 is Nothing) = False then
        Set obj5Child=obj5.FindChild("ObjectIdentifier","formField",5)
        var=EnoviaPDT_CheckEditable(obj5Child)
       else
        var="No"
       end if
    else
    'Applicable other than Tables & Notes tab
      Set FieldArray=oParentobj.FindChild("contentText",arrFields(i),10)
      Set Cell=oParentobj.FindChild("objectIdentifier","IsTargetPercentAsConsumedFixed",10)
      'Applicable For Virtual Intermediate
      if arrFields(i)="Fix Target % As Consumed" and  UCase(sSheetName)="CREATE" then'Aliases.browser.page3dexperiencePlatform.frameSlideinframe.formEmxcreateform.tableForm.Cell(22, 0).Table(0).Cell(0, 0).Checkbox("IsTargetPercentAsConsumedFixed")
         if Cell.Enabled=True then
          var="Yes"
         else
          var="No"
         end if
         if Cell.Checked=False then
            Cell.Click
         end if
      else
        'Applicable For Virtual Intermediate
          if Ucase(sFileName)="VIRTUAL INTERMEDIATE" and Ucase(sSheetName)="CREATE" then
            RowIndex=(FieldArray.RowIndex)+1
            ColumnIndex=FieldArray.ColumnIndex
          else
          'Applicable other than Virtual Intermediate
            RowIndex=FieldArray.RowIndex
            ColumnIndex=(FieldArray.ColumnIndex)+1
          end if
          sCount=oParentobj.Cell(RowIndex, ColumnIndex).ChildCount
          if sCount>0 then
            For m=0 to sCount-1
              Set Cell=oParentobj.Cell(RowIndex, ColumnIndex).Child(m)
              if (Cell.ObjectType="Table") then
                Set Cell1=Cell.Child((Cell.ChildCount)-1)
                cell_count=Cell1.ChildCount
                For n=0 to cell_count-1
                  Set Cell=Cell1.Child(n)
                  if (Cell.ObjectType="Select")or (Cell.ObjectType="Textbox" or Cell.ObjectType="Textarea")then
                    var=EnoviaPDT_CheckEditable(Cell)
                    Exit For
                  end if
                NEXT
                'Applicable for the panel where it may contains group of radio butons and check boxes
              elseif(Cell.ObjectType="Panel")then
                scount=Cell.ChildCount
                'Applicable for the single field
                if scount=1 then
                  Set Cell=Cell.Child((Cell.ChildCount)-1)
                  var=EnoviaPDT_CheckEditable(Cell)
                  'Applicable for the groups
                elseif scount>1 then
                  Count=0
                   For n=0 to scount-1
                     if Cell.Child(n).Enabled=True then
                        Count=Count+1
                     end if
                  NEXT
                if Count<>scount then
                 var="No"
                else
                var="Yes"
                end if
              else
                var="No"
              end if
            else
              if not ((Cell.ObjectType="Button") or (Cell.ObjectType="Link"))then
                var=EnoviaPDT_CheckEditable(Cell)
              end if
            end if
          NEXT
        else
          var="No"
        end if
      end if
    end if
    Set oDict = CreateObject("Scripting.Dictionary")
    oDict.Add arrFields(i),arrFields1(i)
    test1=oDict.Item(arrFields(i))
    Log.Enabled=True
    if test1<>var then
      arrFieldNotEditable(l) = arrFields(i)
      l=l+1
    end if
  Next
  ReDim Preserve arrFieldNotEditable(l-1)
  If Ubound(arrFieldNotEditable) >= 0 Then   
    Log.Error "Field(s) "&Join(arrFieldNotEditable,",")&" is/are not matched with the Spreadsheet"
    Exit Sub
  else
    Log.Message("Fields in application are expected as per spreadsheet")
  End If
End Sub
'''''''**********Function to check the editable of a field based on the ObjType***********
'Inputs: obj,arrField
'Returns Yes or no based on the boolean values
Function EnoviaPDT_CheckEditable(obj)
  Flag=False
  '''Checking the editable for Dropdown
  if (obj.ObjectType="Select")or (obj.ObjectType="Textbox" or obj.ObjectType="Textarea")then
    if (obj.Enabled=True) then
      Flag=True
    else
      Flag=False
    end if
  else
    'This will work for Images
    Flag=False
  end if
  if Flag=True then
   EnoviaPDT_CheckEditable="Yes"
  else 
    EnoviaPDT_CheckEditable="No"
  end if
End Function
