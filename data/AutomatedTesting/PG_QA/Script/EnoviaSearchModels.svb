'Creates an instance of the Common Model Class
Function GetEnoviaSearch_CommonModelInstance
  Set GetEnoviaSearch_CommonModelInstance = New EnoviaSearch_CommonModel
End Function

'Creates an instance of the Revision Model Class
Function GetEnoviaSearch_RevisionModelInstance
  Set GetEnoviaSearch_RevisionModelInstance = New EnoviaSearch_RevisionModel
End Function

'Creates an instance of the User Model Class
Function GetEnoviaSearch_UserModelInstance
  Set GetEnoviaSearch_UserModelInstance = New EnoviaSearch_UserModel
End Function

'Creates an instance of the Date Model Class
Function GetEnoviaSearch_DateTypeModelInstance
  Set GetEnoviaSearch_DateTypeModelInstance = New EnoviaSearch_DateTypeModel
End Function

'Creates an instance of the Name Search Class
Function GetEnoviaSearch_NameSearchTypeInstance
  Set GetEnoviaSearch_NameSearchTypeInstance = New EnoviaSearch_NameSearchType
End Function

'Creates an instance of the Full Text Search Class
Function GetEnoviaSearch_FullTextSearchModelInstance
  Set GetEnoviaSearch_FullTextSearchModelInstance = New EnoviaSearch_FullTextSearchModel
End Function

'Creates an instance of the Find Product Data Class
Function GetEnoviaSearch_FindProductDataModelInstance
  Set GetEnoviaSearch_FindProductDataModelInstance = New EnoviaSearch_FindProductDataModel
End Function

'************************************************************************
 ' Purpose:  A common class that is used by all 3 Enovia Search Types
'************************************************************************

Class EnoviaSearch_CommonModel

  'A data member that holds the Test Case Number
  Private m_nTestCaseNumber
  
  'A data member that holds the ALM ID
  Private m_sALM_ID
  
  'A data member that holds the Results of the main search
  Private m_sResultsMain
  
  'A data member that holds the Results of the refined search
  Private m_sResultsRefined
    
  'A data member that holds the Description
  Private m_sDescription
  
  'A data member that holds the Search Type
  Private m_sSearchType
  
  'A data member that holds the Search Value
  Private m_sSearchValue
  
  'A data member that holds the Limit Results
  Private m_nLimitResults
  
  'A data member that holds the Type
  Private m_sType
  
  'A data member that holds the State
  Private m_sState
  
  'A data member that holds the Policy
  Private m_sPolicy
  
  'A data member that holds the Title
  Private m_sTitle

  Public Property Let TestCaseNumber(value)
    m_nTestCaseNumber = value
  End Property
  
  Public Property Get TestCaseNumber()
    TestCaseNumber = m_nTestCaseNumber
  End Property
  
  Public Property Let ALM_ID(value)
    m_sALM_ID = value
  End Property
  
  Public Property Get ALM_ID()
    ALM_ID = m_sALM_ID
  End Property
  
  Public Property Let ResultsMain(value)
    m_sResultsMain = value
  End Property
  
  Public Property Get ResultsMain()
    ResultsMain = m_sResultsMain
  End Property
  
  Public Property Let ResultsRefined(value)
    m_sResultsRefined = value
  End Property
  
  Public Property Get ResultsRefined()
    ResultsRefined = m_sResultsRefined
  End Property
  
  Public Property Let Description(value)
    m_sDescription = value
  End Property
  
  Public Property Get Description()
    Description = m_sDescription
  End Property
  
  Public Property Let SearchType(value)
    m_sSearchType = value
  End Property
  
  Public Property Get SearchType()
    SearchType = m_sSearchType
  End Property
  
  Public Property Let SearchValue(value)
    m_sSearchValue = value
  End Property
  
  Public Property Get SearchValue()
    SearchValue = m_sSearchValue
  End Property

  Public Property Let LimitResults(value)
    m_nLimitResults = value
  End Property
  
  Public Property Get LimitResults()
    LimitResults = m_nLimitResults
  End Property
  
  Public Property Let SType(value)
    m_sType = value
  End Property
  
  Public Property Get SType()
    SType = m_sType
  End Property
  
  Public Property Let State(value)
    m_sState = value
  End Property
  
  Public Property Get State()
    State = m_sState
  End Property
  
  Public Property Let Policy(value)
    m_sPolicy = value
  End Property
  
  Public Property Get Policy()
    Policy = m_sPolicy
  End Property
    
  Public Property Let Title(value)
    m_sTitle = value
  End Property
  
  Public Property Get Title()
    Title = m_sTitle
  End Property
   
End Class

'************************************************************************
 ' Purpose:  A class the revision information for Enovia search types
'************************************************************************

Class EnoviaSearch_RevisionModel
  
  'A data member that holds the Revision
  Private m_sRevision
  
  'A data member that holds the Highest
  Private m_bHighest
  
  'A data member that holds the By State
  Private m_bByState

  Public Property Let Revision(value)
    m_sRevision = value
  End Property
  
  Public Property Get Revision()
    Revision = m_sRevision
  End Property
  
  Public Property Let Highest(value)
    m_bHighest = value
  End Property
  
  Public Property Get Highest()
    Highest = m_bHighest
  End Property
  
  Public Property Let ByState(value)
    m_bByState = value
  End Property
  
  Public Property Get ByState()
    ByState = m_bByState
  End Property
   
End Class

'************************************************************************
 ' Purpose:  A class that holds the user data for the Search types
'************************************************************************

Class EnoviaSearch_UserModel

  'A data member that holds the User
  Private m_sUser
  
  'A data member that holds the Case Sensitive
  Private m_bCaseSensitive 
  
  'A data member that holds the Limit To
  Private m_nLimitTo
  'A data member that holds the Name Or Number
  Private m_sNameOrNumber
  
  'A data member that holds the First Name
  Private m_sFirstName
  
  'A data member that holds the Last Name
  Private m_sLastName
  
  'A data member that holds the Member
  Private m_sMember

  Public Property Let User(value)
    m_sUser = value
  End Property
  
  Public Property Get User()
    User = m_sUser
  End Property
  
  Public Property Let CaseSensitive(value)
    m_bCaseSensitive = value
  End Property
  
  Public Property Get CaseSensitive()
    CaseSensitive = m_bCaseSensitive
  End Property
  
  Public Property Let LimitResults(value)
    m_nLimitTo = value
  End Property
  
  Public Property Get LimitResults()
    LimitResults = m_nLimitTo
  End Property

  Public Property Let NameOrNumber(value)
    m_sNameOrNumber = value
  End Property
  
  Public Property Get NameOrNumber()
    NameOrNumber = m_sNameOrNumber
  End Property
  
  Public Property Let FirstName(value)
    m_sFirstName = value
  End Property
  
  Public Property Get FirstName()
    FirstName = m_sFirstName
  End Property
  
  Public Property Let LastName(value)
    m_sLastName = value
  End Property
  
  Public Property Get LastName()
    LastName = m_sLastName
  End Property
  
  Public Property Let Member(value)
    m_sMember = value
  End Property
  
  Public Property Get Member()
    Member = m_sMember
  End Property

End Class

'*************************************************************************
 ' Purpose:  A class that holds the date information for the Enovia search 
 '           types
'*************************************************************************

Class EnoviaSearch_DateTypeModel

  'A data member that holds the Date
  Private m_dDate
  
  'A data member that holds the When(On/Before)
  Private m_sWhen
  
  'A data member that holds the First Date
  Private m_dDateOne
  
  'A data member that holds the Day of First Date
  Private m_nDateOne_day
  
  'A data member that holds the Month of First Date
  Private m_nDateOne_month
  
  'A data member that holds the Year of First Date
  Private m_nDateOne_year
  
  'A data member that holds the Second Date
  Private m_dDateTwo
  
  'A data member that holds the Day of Second Date
  Private m_nDateTwo_day
  
  'A data member that holds the Month of Second Date
  Private m_nDateTwo_month
  
  'A data member that holds the Year of Second Date
  Private m_nDateTwo_year
    
  Public Property Let SDate(value)
    m_dDate = value
  End Property
  
  Public Property Get SDate()
    SDate = m_dDate
  End Property
  
  Public Property Let When(value)
    m_sWhen = value
  End Property
  
  Public Property Get When()
    When = m_sWhen
  End Property
  
  Public Property Let DateOne(value)
    m_dDateOne = value
  End Property
  
  Public Property Get DateOne()
    DateOne = m_dDateOne
  End Property
  
  Public Property Let DateOneDay(value)
    m_nDateOne_day = value
  End Property
  
  Public Property Get DateOneDay()
    DateOneDay = m_nDateOne_day
  End Property
  
  Public Property Let DateOneMonth(value)
    m_nDateOne_month = value
  End Property
  
  Public Property Get DateOneMonth()
    DateOneMonth = m_nDateOne_month
  End Property
  
  Public Property Let DateOneYear(value)
    m_nDateOne_year = value
  End Property
  
  Public Property Get DateOneYear()
    DateOneYear = m_nDateOne_year
  End Property
  
  Public Property Let DateTwo(value)
    m_dDateTwo = value
  End Property
  
  Public Property Get DateTwo()
    DateTwo = m_dDateTwo
  End Property
  
  Public Property Let DateTwoDay(value)
    m_nDateTwo_day = value
  End Property
  
  Public Property Get DateTwoDay()
    DateTwoDay = m_nDateTwo_day
  End Property
  
  Public Property Let DateTwoMonth(value)
    m_nDateTwo_month = value
  End Property
  
  Public Property Get DateTwoMonth()
    DateTwoMonth = m_nDateTwo_month
  End Property
  
  Public Property Let DateTwoYear(value)
    m_nDateTwo_year = value
  End Property
  
  Public Property Get DateTwoYear()
    DateTwoYear = m_nDateTwo_year
  End Property

End Class

'*************************************************************************
 ' Purpose:  A class that holds all the data needed to perform an Enovia 
 '           name search
'*************************************************************************

Class EnoviaSearch_NameSearchType 
  
  'A data member that holds the Case Sensitive
  Private m_bCaseSensitive
  
  'An Object that holds the Common Model Data Member
  Private m_oCommonModel
  
  'An Object that holds the Revision Model Data Members 
  Private m_oRevisionModel
  
  'An Object that holds the Owner Model Data Members
  Private m_oOwnerUserModel
  
  'An Object that holds the Originator Model Data Members
  Private m_oOriginatorUserModel
  
  'An Object that holds the Originated Date Model Data Members
  Private m_oOriginatedDateModel
  
  'An Object that holds the Modified Date Model Data Members
  Private m_oModifiedDateModel
  
  Public Property Let CaseSensitive(value)
    m_bCaseSensitive = value
  End Property
  
  Public Property Get CaseSensitive()
    CaseSensitive = m_bCaseSensitive
  End Property
  
  'Initializes all the other class objects that are used in Name Search
  Private Sub Class_Initialize()
    Set m_oCommonModel = GetEnoviaSearch_CommonModelInstance
    Set m_oRevisionModel = GetEnoviaSearch_RevisionModelInstance
    Set m_oOwnerUserModel = GetEnoviaSearch_UserModelInstance
    Set m_oOriginatorUserModel = GetEnoviaSearch_UserModelInstance
    Set m_oOriginatedDateModel = GetEnoviaSearch_DateTypeModelInstance
    Set m_oModifiedDateModel = GetEnoviaSearch_DateTypeModelInstance
  End Sub
  
  Public Property Get Common()
    Set Common = m_oCommonModel
  End Property
  
  Public Property Get Revision()
    Set Revision = m_oRevisionModel
  End Property
  
  Public Property Get OwnerUser()
    Set OwnerUser = m_oOwnerUserModel
  End Property
  
  Public Property Get OriginatorUser()
    Set OriginatorUser = m_oOriginatorUserModel
  End Property
  
  Public Property Get OriginatedDate()
    Set OriginatedDate = m_oOriginatedDateModel
  End Property
  
  Public Property Get ModifiedDate()
    Set ModifiedDate = m_oModifiedDateModel
  End Property
  
  'Terminates all the other class objects that are used in Name Search 
  Private Sub Class_Terminate()
    Set m_oCommonModel = nothing
    Set m_oRevisionModel = nothing
    Set m_oOwnerUserModel = nothing
    Set m_oOriginatorUserModel = nothing
    Set m_oOriginatedDateModel = nothing
    Set m_oModifiedDateModel = nothing
  End Sub

End Class

'*************************************************************************
 ' Purpose:  A class that holds all the data needed to perform an Enovia 
 '           full text search
'*************************************************************************

Class EnoviaSearch_FullTextSearchModel
  
  'An Object that holds the Common Model Data Members
  Private m_oCommonModel
  
  'An Object that holds the Revision Model Data Members 
  Private m_oRevisionModel
  
  'A data memeber that holds Security Category Classification
  Private m_sSecCatClassification
  
  'A data memeber that holds C S S Business Category(Legacy)
  Private m_sCssBusinessCategory
  
  'A data memeber that holds Plant
  Private m_sPlant
  
  'A data memeber that holds Owning Standards Office
  Private m_sOwningStandardsOffice
  
  Public Property Let SecCatClassification(value)
    m_sSecCatClassification = value
  End Property
  
  Public Property Get SecCatClassification()
    SecCatClassification = m_sSecCatClassification
  End Property
  
  Public Property Let CSSBusinessCat(value)
    m_sCssBusinessCategory = value
  End Property
  
  Public Property Get CSSBusinessCat()
    CSSBusinessCat = m_sCssBusinessCategory
  End Property
  
  Public Property Let Plant(value)
    m_sPlant = value
  End Property
  
  Public Property Get Plant()
    Plant = m_sPlant
  End Property
  
  Public Property Let OwningStandardsOffice(value)
    m_sOwningStandardsOffice = value
  End Property
  
  Public Property Get OwningStandardsOffice()
    OwningStandardsOffice = m_sOwningStandardsOffice
  End Property
  
  'Initializes all the other class objects that are used in Full Text Search
  Private Sub Class_Initialize()
    Set m_oCommonModel = GetEnoviaSearch_CommonModelInstance
    Set m_oRevisionModel = GetEnoviaSearch_RevisionModelInstance
  End Sub
  
  Public Property Get Common()
    Set Common = m_oCommonModel
  End Property
  
  Public Property Get Revision()
    Set Revision = m_oRevisionModel
  End Property
  
  'Terminates all the other class objects that are used in Full Text Search
  Private Sub Class_Terminate()
    Set m_oCommonModel = nothing
    Set m_oRevisionModel = nothing
  End Sub

End Class

'*************************************************************************
 ' Purpose:  A class that holds all the data needed to perform an Enovia 
 '           find product data search
'*************************************************************************
 
Class EnoviaSearch_FindProductDataModel

  'A data member that holds Name / Number
  Private m_sNameOrNumber
  
  'A data member that holds Specification Sub Type
  Private m_sSpecSubType
  
  'A data member that holds Description
  Private m_sDescription2
  
  'A data member that holds Security Category Classification
  Private m_sSecCatClassification
  
  'A data member that holds Organization
  Private m_sOrganization
  
  'A data member that holds Segment 
  Private m_sSegment
  
  'A data member that holds CSS Business Category (Legacy)
  Private m_sCssBusinessCategory
  
  'A data member that holds Plants Authorized
  Private m_sPlantsAuthorized
  
  'A data member that holds Plants Authorized to Use
  Private m_sPlantsAuthorizedToUse
  
  'A data member that holds Plants Authorized to Produce
  Private m_sPlantsAuthorizedToProduce
  
  'A data member that holds Plants Activated
  Private m_sPlantsActivated
  
  'A data member that holds Supplier Name
  Private m_sSupplierName
  
  'A data member that holds Originator
  Private m_sOriginator
  
  'A data member that holds Originator/Co-Owner T#
  Private m_sOriginatorOrCoOwner
  
  'A data member that holds Material Group
  Private m_sMaterialGroup
  
  'A data member that holds Manufacturing Status
  Private m_sManufacturingStatus
  
  'A data member that holds Class
  Private m_sClass
  
  'A data member that holds Sub Class
  Private m_sSubClass
  
  'A data member that holds Reported Function
  Private m_sReportedFunction
  
  'A data member that holds Packaging Material Type
  Private m_sPackagingMaterialType
  
  'A data member that holds Local Description
  Private m_sLocalDescription
  
  'A data member that holds Other Names
  Private m_sOtherNames
  
  'A data member that holds Is Intermediate
  Private m_sIsIntermediate
  
  'A data member that holds ATS Impacted Type
  Private m_sATSImpactedType
  
  'A data member that holds Is ATS
  Private m_sIsATS
  
  'A data member that holds Has ATS
  Private m_sHasATS
  
  'A data member that holds Artwork Connected
  Private m_sArtworkConnected
  
  'A data member that holds Brand
  Private m_sBrand
  
  'A data member that holds Project Security Group
  Private m_sProjectSecurityGroup
  
  'A data member that holds Owning Standards Office
  Private m_sOwningStandardsOffice
  
  'An Object that holds the Common Model Data Members
  Private m_oCommonModel
  
  'An Object that holds the Revision Model Data Members
  Private m_oRevisionModel
  
  'An Object that holds the Release Model Data Members
  Private m_oReleaseDate
  
  'An Object that holds the Effective Model Data Members
  Private m_oEffectiveDate
  
  'An Object that holds the Expiration Model Data Members
  Private m_oExpirationDate
  
  'An Object that holds the Obsolete Model Data Members
  Private m_oObsoleteDate

  Public Property Let NameOrNumber(value)
    m_sNameOrNumber = value
  End Property
  
  Public Property Get NameOrNumber()
    NameOrNumber = m_sNameOrNumber
  End Property
  
  Public Property Let SpecSubType(value)
    m_sSpecSubType = value
  End Property
  
  Public Property Get SpecSubType()
    SpecSubType = m_sSpecSubType
  End Property
  
  Public Property Let Description2(value)
    m_sDescription2 = value
  End Property
  
  Public Property Get Description2()
    Description2 = m_sDescription2
  End Property
  
  Public Property Let SecCatClassification(value)
    m_sSecCatClassification = value
  End Property
  
  Public Property Get SecCatClassification()
    SecCatClassification = m_sSecCatClassification
  End Property
  
  Public Property Let Organization(value)
    m_sOrganization = value
  End Property
  
  Public Property Get Organization()
    Organization = m_sOrganization
  End Property
  
  Public Property Let Segment(value)
    m_sSegment = value
  End Property
  
  Public Property Get Segment()
    Segment = m_sSegment
  End Property
  
  Public Property Let CSSBusinessCategory(value)
    m_sCssBusinessCategory = value
  End Property
  
  Public Property Get CSSBusinessCategory()
    CSSBusinessCategory = m_sCssBusinessCategory
  End Property
  
  Public Property Let PlantsAuth(value)
    m_sPlantsAuthorized = value
  End Property
  
  Public Property Get PlantsAuth()
    PlantsAuth = m_sPlantsAuthorized
  End Property
  
  Public Property Let PlantsAuthToUse(value)
    m_sPlantsAuthorizedToUse = value
  End Property
  
  Public Property Get PlantsAuthToUse()
    PlantsAuthToUse = m_sPlantsAuthorizedToUse
  End Property
  
  Public Property Let PlantsAuthToProd(value)
    m_sPlantsAuthorizedToProduce = value
  End Property
  
  Public Property Get PlantsAuthToProd()
    PlantsAuthToProd = m_sPlantsAuthorizedToProduce
  End Property
  
  Public Property Let PlantsActivated(value)
    m_sPlantsActivated = value
  End Property
  
  Public Property Get PlantsActivated()
    PlantsActivated = m_sPlantsActivated
  End Property
  
  Public Property Let SupplierName(value)
    m_sSupplierName = value
  End Property
  
  Public Property Get SupplierName()
    SupplierName = m_sSupplierName
  End Property
  
  Public Property Let Originator(value)
    m_sOriginator = value
  End Property
  
  Public Property Get Originator()
    Originator = m_sOriginator
  End Property
  
  Public Property Let OriginatorOrCoOwner(value)
    m_sOriginatorOrCoOwner = value
  End Property
  
  Public Property Get OriginatorOrCoOwner()
    OriginatorOrCoOwner = m_sOriginatorOrCoOwner
  End Property
  
  Public Property Let MaterialGroup(value)
    m_sMaterialGroup = value
  End Property
  
  Public Property Get MaterialGroup()
    MaterialGroup = m_sMaterialGroup
  End Property
  
  Public Property Let ManufacturingStatus(value)
    m_sManufacturingStatus = value
  End Property
  
  Public Property Get ManufacturingStatus()
    ManufacturingStatus = m_sManufacturingStatus
  End Property
  
  Public Property Let SClass(value)
    m_sClass = value
  End Property
  
  Public Property Get SClass()
    SClass = m_sClass
  End Property
  
  Public Property Let SubClass(value)
    m_sSubClass = value
  End Property
  
  Public Property Get SubClass()
    SubClass = m_sSubClass
  End Property
  
  Public Property Let ReportedFunction(value)
    m_sReportedFunction = value
  End Property
  
  Public Property Get ReportedFunction()
    ReportedFunction = m_sReportedFunction
  End Property
  
  Public Property Let PackagingMaterialType(value)
    m_sPackagingMaterialType = value
  End Property
  
  Public Property Get PackagingMaterialType()
    PackagingMaterialType = m_sPackagingMaterialType
  End Property
  
  Public Property Let LocalDescription(value)
    m_sLocalDescription = value
  End Property
  
  Public Property Get LocalDescription()
    LocalDescription = m_sLocalDescription
  End Property
  
  Public Property Let OtherNames(value)
    m_sOtherNames = value
  End Property
  
  Public Property Get OtherNames()
    OtherNames = m_sOtherNames
  End Property
  
  Public Property Let IsIntermediate(value)
    m_sIsIntermediate = value
  End Property
  
  Public Property Get IsIntermediate()
    IsIntermediate = m_sIsIntermediate
  End Property
  
  Public Property Let ATSImpactedType(value)
    m_sATSImpactedType = value
  End Property
  
  Public Property Get ATSImpactedType()
    ATSImpactedType = m_sATSImpactedType
  End Property
  
  Public Property Let IsATS(value)
    m_sIsATS = value
  End Property
  
  Public Property Get IsATS()
    IsATS = m_sIsATS
  End Property
  
  Public Property Let HasATS(value)
    m_sHasATS = value
  End Property
  
  Public Property Get HasATS()
    HasATS = m_sHasATS
  End Property
  
  Public Property Let ArtworkConnected(value)
    m_sArtworkConnected = value
  End Property
  
  Public Property Get ArtworkConnected()
    ArtworkConnected = m_sArtworkConnected
  End Property
  
  Public Property Let Brand(value)
    m_sBrand = value
  End Property
  
  Public Property Get Brand()
    Brand = m_sBrand
  End Property
  
  Public Property Let ProjectSecurityGroup(value)
    m_sProjectSecurityGroup = value
  End Property
  
  Public Property Get ProjectSecurityGroup()
    ProjectSecurityGroup = m_sProjectSecurityGroup
  End Property
  
  Public Property Let OwningStandardsOffice(value)
    m_sOwningStandardsOffice = value
  End Property
  
  Public Property Get OwningStandardsOffice()
    OwningStandardsOffice = m_sOwningStandardsOffice
  End Property
  
  'Initializes all the other class objects that are used in Find Product Data Search
  Private Sub Class_Initialize()
    Set m_oCommonModel = GetEnoviaSearch_CommonModelInstance
    Set m_oRevisionModel = GetEnoviaSearch_RevisionModelInstance
    Set m_oReleaseDate = GetEnoviaSearch_DateTypeModelInstance
    Set m_oEffectiveDate = GetEnoviaSearch_DateTypeModelInstance
    Set m_oExpirationDate = GetEnoviaSearch_DateTypeModelInstance
    Set m_oObsoleteDate = GetEnoviaSearch_DateTypeModelInstance
  End Sub
  
  Public Property Get Common()
    Set Common = m_oCommonModel
  End Property
  
  Public Property Get Revision()
    Set Revision = m_oRevisionModel
  End Property
  
  Public Property Get ReleaseDate()
    Set ReleaseDate = m_oReleaseDate
  End Property
  
  Public Property Get EffectiveDate()
    Set EffectiveDate = m_oEffectiveDate
  End Property
  
  Public Property Get ExpirationDate()
    Set ExpirationDate = m_oExpirationDate
  End Property
  
  Public Property Get ObsoleteDate()
    Set ObsoleteDate = m_oObsoleteDate
  End Property
  
  'Terminates all the other class objects that are used in Find Product Data Search  
  Private Sub Class_Terminate()
   Set m_oCommonModel = nothing
   Set m_oRevisionModel = nothing
   Set m_oReleaseDate = nothing
   Set m_oEffectiveDate = nothing
   Set m_oExpirationDate = nothing
   Set m_oObsoleteDate = nothing
  End Sub
  
End Class

