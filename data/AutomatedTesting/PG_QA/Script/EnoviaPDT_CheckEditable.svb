'USEUNIT WebObjectLib
'USEUNIT OR_Enovia
'USEUNIT ExcelLib
'USEUNIT GlobalVars
'USEUNIT Loglib
'USEUNIT EnoviaPDT_PDTUtils
'USEUNIT EnoviaPDT_ValidationUtils


'Description  : Function to Check editable of fields in a given page
'Inputs       : SheetName - SheetName in excel containing the Fields in the expected order
               'Filename - File Name of the Excel sheet
'Output       : None               
'Author       : Swarna  

Sub EnoviaPDT_CheckEditableFields(sSheetName,sFileName)
  Dim sColumnName,sColumnEditable,sFilePath,aFields,aEditable,i,nRowIndex,nColumnIndex,sVar,sVar1,oDict
  Dim oParentobj,oParentobj1,oLabel,oField,oCell,oAddButton,oInsertButton
  On Error Resume Next
  sColumnName = "Field"
  sColumnEditable="Editable"
  sFilePath = g_pdt_FileLocation&sFileName&".xlsx"
  
  Select Case Ucase(sSheetName)
    Case "CREATE" 
      if Ucase(sFileName)="VIRTUAL INTERMEDIATE" then
        Set oParentobj = objGetObject(OR_EnoviaPDT_CreateTbl,"","")'Object for Virtual intermediate page
      else
       Set oParentobj = objGetObject(OR_EnoviaPDT_CreateTbl,g_CreatePage_URL,"")'Object for create page
      end if
    Case "ATTRIBUTES","MASTER"
      Set oParentobj = objGetObject(OR_EnoviaPDT_CreateTbl,"","")'Object for attribute tab
    Case "TABLES","TABLES WEIGHT"
      Set oParentobj = objGetObject(OR_EnoviaPDT_TablesBodyPnl,"","")'Object for Tables and Tables weight tab
    Case "NOTES"
      Set oParentobj = objGetObject(OR_EnoviaPDT_NotesPnl,"","")'Object for Notes tab
    Case "COPY"
      if Ucase(sFileName)="FORMULATION PROCESS" then
        Set oParentobj = objGetObject(OR_EnoviaPDT_CreateTbl,g_CreatePage_URL,"")'Object for Copy tab
      else
        Set oParentobj = objGetObject(OR_EnoviaPDT_CreateTbl,g_CopyPage_URL,"")'Object for Copy tab
      end if
   Case Else
      Log.Warning "Application Page Name given is not Valid"
      Exit Sub    
  End Select

  aFields = Excel_GetColumnValues(sSheetName,sFilePath,sColumnName)
  aEditable = Excel_GetColumnValues(sSheetName,sFilePath,sColumnEditable)
  If Ucase(sSheetName) = "TABLES" Then
       Set oAddButton = objGetObject(OR_EnoviaPDT_TablesAddBtn,"","") 'Click on Add button
        If (oAddButton IS Nothing) = False Then
          oAddButton.Click
        End If
    
        Set oInsertButton = objGetObject(OR_EnoviaPDT_TablesInsertAboveLnk,"","")  'Insert New row
        If (oInsertButton IS Nothing) = False Then
          oInsertButton.Click
        End If
        Delay 1500
  end if
  'Applicable for Tables, Tables weight and Notes tabs
  For i = 0 to Ubound(aFields)
    if Ucase(sSheetName)="TABLES" or Ucase(sSheetName)="TABLES WEIGHT" or Ucase(sSheetName)="NOTES" then
      'Set oParentobj1=oParentobj.FindChild("objectIdentifier","headTable",10)
      Set oLabel=oParentobj.FindChild(Array("contentText","ObjectType"),Array(aFields(i),"Cell"),10)
      if isObject(oLabel)and oLabel.Exists then
          'Applicable for the first field of a table (No.)
           if i=0 then 
              'Applicable only for 1 field i.e. No as it will comes in a different panel
              Set oField=objGetObject(OR_EnoviaPDT_TablesPnl1,"","")'Applicable only for 1 field i.e. No as it will comes in a different panel
                Set oField=oField.FindChild("ObjectIdentifier","treeBodyTable",6)
                nColumnIndex=1
                Set oField=oField.cell(1,nColumnIndex)
            else
            'Applicable for the remaining fields in Tables tab
                nColumnIndex=(oLabel.ColumnIndex)/2
                Set oParentobj1=oParentobj.Findchild("ObjectIdentifier","bodyTable",6)
                Set oField=oParentobj1.Cell(1,nColumnIndex)
           end if
           sVar=EnoviaPDT_FloatingWindow(oField,aFields(i))
          Set oDict = CreateObject("Scripting.Dictionary")
          oDict.Add aFields(i),aEditable(i)
          sVar1=oDict.Item(aFields(i))
          call EnoviaPDT_ComparisionOfAppAndExcel(sVar,sVar1,aFields(i))
      else
          Log.Warning("Unable to find field:"&aFields(i))
      end if
    else
    'Applicable other than Tables & Notes tab
      Set oLabel=oParentobj.FindChild("contentText",aFields(i),10)
      if isObject(oLabel)and oLabel.Exists then 
        Set oCell=oParentobj.FindChild("objectIdentifier","IsTargetPercentAsConsumedFixed",10)
        'Applicable For Virtual Intermediate
        if aFields(i)="Fix Target % As Consumed" and  UCase(sSheetName)="CREATE" then'Aliases.browser.page3dexperiencePlatform.frameSlideinframe.formEmxcreateform.tableForm.Cell(22, 0).Table(0).Cell(0, 0).Checkbox("IsTargetPercentAsConsumedFixed")
           if oCell.Enabled=True then
            sVar="Yes"
           else
            sVar="No"
           end if
           if oCell.Checked=False then
              oCell.Click
           end if
           Set oCell=Nothing
        elseif aFields(i)="Limit access to named users?" and  Ucase(sFileName)="VIRTUAL INTERMEDIATE" then 'To enable Project Security classification we need to make Radio button Yes to true
         Set oCell=oParentobj.FindChild("value","Yes",10)
         oCell.Click
        else
          'Applicable For Virtual Intermediate
            if Ucase(sFileName)="VIRTUAL INTERMEDIATE" and Ucase(sSheetName)="CREATE" then
            'To get the next Row from the label
              nRowIndex=(oLabel.RowIndex)+1
              nColumnIndex=oLabel.ColumnIndex
            else
            'Applicable other than Virtual Intermediate
              'To get the next Column from the label
              nRowIndex=oLabel.RowIndex
              nColumnIndex=(oLabel.ColumnIndex)+1
            end if
            sVar= EnoviaPDT_ValidationOfField(oParentobj,nRowIndex,nColumnIndex)
        end if
        Set oDict = CreateObject("Scripting.Dictionary")
        oDict.Add aFields(i),aEditable(i)
        sVar1=oDict.Item(aFields(i))
        call EnoviaPDT_ComparisionOfAppAndExcel(sVar,sVar1,aFields(i))
      else
          Log.Warning("Unable to find field:"&aFields(i))
      end if
    end if
    'Creating dictionary to get the Fields and editable columns
  Next
  if Ucase(sFileName)="VIRTUAL INTERMEDIATE" and Ucase(sSheetName)="CREATE" then
    Set oCell=oParentobj.FindChild("objectIdentifier","IsTargetPercentAsConsumedFixed",10)
    if oCell.Checked=True then
        oCell.Click
     end if
     Set oCell=Nothing
  elseif Ucase(sSheetName) = "TABLES" Then
      Set oResetBtn = objGetObject(OR_EnoviaPDT_NotesResetBtn,"","") 
      oResetBtn.Click  
      Set oResetBtn = Nothing   'Releasing Reset Button   
  end if
  g_isBlocked = False
  'Clean up all the variables   
  EnoviaPDT_ClearVariable sColumnName
  EnoviaPDT_ClearVariable sColumnEditable
  EnoviaPDT_ClearVariable sFilePath
  EnoviaPDT_ClearVariable oParentobj
  EnoviaPDT_ClearVariable oParentobj1
  EnoviaPDT_ClearVariable aFields
  EnoviaPDT_ClearVariable aEditable
  EnoviaPDT_ClearVariable oLabel
  EnoviaPDT_ClearVariable oField
  EnoviaPDT_ClearVariable nColumnIndex
  EnoviaPDT_ClearVariable oInputDict
  EnoviaPDT_ClearVariable nRowIndex
  EnoviaPDT_ClearVariable sVar
  EnoviaPDT_ClearVariable sVar1
  EnoviaPDT_ClearVariable oDict
  EnoviaPDT_ClearVariable i
  EnoviaPDT_ClearVariable oCello
  EnoviaPDT_ClearVariable AddButton
  EnoviaPDT_ClearVariable oInsertButton
  
End Sub



'Description  : Function to Check whether the given object is editable or not
'Inputs       : obj-Object of a field
'Output       : Boolean value               
'Author       : Swarna  


Function EnoviaPDT_CheckEditable(oCell)
  Dim bFlag
  bFlag=False
  '''Checking the editable for Dropdown,textbox and textarea 
  if (oCell.ObjectType="Select")or (oCell.ObjectType="Textbox") or (oCell.ObjectType="Textarea") or (oCell.ObjectType="RadioButton")then
    'Check the enabled property of a given object
    if (oCell.Enabled=True) then
      bFlag=True
    else
      bFlag=False
    end if
  else
    'This will work for Images
    bFlag=False
  end if
  if bFlag=True then
   EnoviaPDT_CheckEditable="Yes"
  else 
    EnoviaPDT_CheckEditable="No"
  end if
  'Clean up all the variables 
   EnoviaPDT_ClearVariable bFlag
End Function



'Description  : Function to work on floating window
'Inputs       : Field-To double click on cell
'Output       : NA            
'Author       : Swarna  

Function EnoviaPDT_FloatingWindow(oField,aField)
   Dim oFloatingPanel,oField1
   oField.DblClick (oField.Width)*0.75,(oField.offsetHeight)*0.5
   'Gets object for Floating Window
   set oFloatingPanel=objGetObject(OR_EnoviaPDT_TablesFloatingDivPnl,"",5000)
   if (oFloatingPanel is Nothing) = True and aField="Test Method Reference Document Name" then
      oField.DblClick '(oField.Width)*0.75,(oField.offsetHeight)*0.5
      set oFloatingPanel=objGetObject(OR_EnoviaPDT_TablesFloatingDivPnl,"",5000)
   end if
   'if floating window is available , it will check the object type of a panel
   if (oFloatingPanel is Nothing) = False then
    Set oField1=oFloatingPanel.FindChild("ObjectIdentifier","formField",5)
    sVar=EnoviaPDT_CheckEditable(oField1)
    'To avoid overlapping windows
      if oFloatingPanel.Exists then
        oFloatingPanel.Keys("[Esc]")
      end if
    else
      sVar="No"
    end if
   EnoviaPDT_FloatingWindow=sVar
   
  'Clean up all the variables 
   EnoviaPDT_ClearVariable oFloatingPanel
   EnoviaPDT_ClearVariable oField1
   EnoviaPDT_ClearVariable sVar
End Function

'Description  : Function to work on fields in Create, attributes and copy page
'Inputs       : oParentobj-Parent object of a page
'                RowIndex-RowIndex of a field
'                ColumnIndex-ColumnIndex of a field
'Output       : NA            
'Author       : Swarna  

Function EnoviaPDT_ValidationOfField(oParentobj,nRowIndex,nColumnIndex)
  Dim sCount,ocell_count,sVar,i,nAppcount,nCount
  Dim oCell1,oCell
  'Get childcount of a cell
  sCount=oParentobj.Cell(nRowIndex, nColumnIndex).ChildCount
  if sCount>0 then
    For m=0 to sCount-1
      Set oCell=oParentobj.Cell(nRowIndex, nColumnIndex).Child(m)
        'if child contains table
       if (oCell.ObjectType="Table") then
          Set oCell1=oCell.Child((oCell.ChildCount)-1)
          ocell_count=oCell1.ChildCount
          'To iterate all the childs of a cell
          For i=0 to ocell_count-1
            Set oCell=oCell1.Child(i)
             if (oCell.ObjectType="Select")or (oCell.ObjectType="Textbox") or (oCell.ObjectType="Textarea") or (oCell.ObjectType="Image")or (oCell.ObjectType="RadioButton") then
                sVar=EnoviaPDT_CheckEditable(oCell)
                 Exit For
             end if
          NEXT
        'Applicable for the panel where it may contains group of radio butons and check boxes
        elseif(oCell.ObjectType="Panel")then
          nAppcount=oCell.ChildCount
          'Applicable for the single field of a panel
          if nAppcount=1 then
            Set oCell=oCell.Child((oCell.ChildCount)-1)
            sVar=EnoviaPDT_CheckEditable(oCell)
            'Applicable for the groups
          elseif nAppcount>1 then
            nCount=0
            For i=0 to nAppcount-1
               if oCell.Child(i).Enabled=True then
                  nCount=nCount+1
               end if
            NEXT
            'compares the actual radio button or check box group and how many are enabled
            if nCount<>nAppcount then
              sVar="No"
            else
              sVar="Yes"
            end if
          else
            'if cell doesn't contain any child
            sVar="No"
          end if
        else
          if not ((oCell.ObjectType="Button") or (oCell.ObjectType="Link"))then
            sVar=EnoviaPDT_CheckEditable(oCell)
          end if
       end if
    NEXT
  else
    'If cell doesn't contain any child
    sVar="No"
  end if
 EnoviaPDT_ValidationOfField=sVar
   
  'Clean up all the variables 
   EnoviaPDT_ClearVariable sCount
   EnoviaPDT_ClearVariable ocell_count
   EnoviaPDT_ClearVariable sVar
   EnoviaPDT_ClearVariable i
   EnoviaPDT_ClearVariable nAppcount
   EnoviaPDT_ClearVariable nCount
   EnoviaPDT_ClearVariable oCell1
   EnoviaPDT_ClearVariable oCell
End Function

'Description  : Function to work on final comparision between application and excel file
'Inputs       : oParentobj-Parent object of a page
'                RowIndex-RowIndex of a field
'                ColumnIndex-ColumnIndex of a field
'Output       : NA            
'Author       : Swarna  

Function EnoviaPDT_ComparisionOfAppAndExcel(sVar,sVar1,aFields)
  Dim sErrorMessage,sExpected,bPassed
  sErrorMessage=""
  sExpected=aFields&" editable validation is checked successfully"
  if Ucase(sVar1)<>Ucase(sVar) then
  'if the value in spread sheet is not matching with the application, sErrormessage will be set with the data
      if Ucase(sVar1)="NO" then
        sErrorMessage = aFields&" is non-editable and it's not matched with the application"
      else
        sErrorMessage = aFields&" is editable and it's not matched with the application"
      end if 
      sErrorMessage = sErrorMessage&" "&Err.Description
      bPassed=False 
      Log.Warning sErrorMessage
    else
      bPassed=True
      Log.Message sExpected
    end if
    Call LogStepData(g_pdt_CurrentCategory&"-"&g_pdt_CurrentTab&": "&sExpected, bPassed, sErrorMessage, "")
  g_isBlocked = False
  'Clean up the variables  
      
  EnoviaPDT_ClearVariable sErrorMessage
  EnoviaPDT_ClearVariable bPassed
  EnoviaPDT_ClearVariable sExpected
End Function
